#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 293)

def self.parse(sql)
  new.scan_str(sql)
rescue Racc::ParseError => err
  raise err.to_s.strip
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   104,   177,    52,    57,   131,   100,   147,   148,   188,   149,
   150,   151,    72,    71,   189,   217,   152,   153,   154,   155,
   156,   157,    35,  -112,    38,    39,    54,   217,   199,    54,
   146,    54,   108,    11,   146,   104,   200,   179,    54,   180,
   181,    38,    39,    58,    36,    27,    29,    30,    31,    32,
   161,    40,   184,    44,   204,    45,    46,    35,   227,   228,
   111,  -112,  -112,  -112,    55,    56,   124,   108,    11,   125,
   104,   127,   128,   207,   129,   130,    38,    39,    11,    36,
    27,    29,    30,    31,    32,   219,    40,   182,    44,   221,
    45,    46,    35,   222,   224,   111,   225,   146,    54,   235,
   236,     3,   108,    11,    54,     4,    47,    49,    21,    35,
     3,    38,    39,    51,    36,    27,    29,    30,    31,    32,
    11,    40,   -69,    44,    62,    45,    46,    63,    38,    39,
    35,    36,    27,    29,    30,    31,    32,    64,    40,    65,
    44,    11,    45,    46,   104,    66,     3,    67,  -130,    38,
    39,    68,    36,    27,    29,    30,    31,    32,    69,    40,
    70,    44,    73,    45,    46,    21,    35,     3,    75,   111,
    81,    54,    88,    54,    96,   101,   108,    11,   103,   133,
   134,   135,    21,   136,   137,    38,    39,    35,    36,    27,
    29,    30,    31,    32,   138,    40,   139,    44,    11,    45,
    46,    21,   141,   142,    35,   146,    38,    39,   158,    36,
    27,    29,    30,    31,    32,    11,    40,   161,    44,    81,
    45,    46,   182,    35,   164,   165,    36,    27,    29,    30,
    31,    32,   166,    40,    11,    44,   167,    45,    46,   168,
    54,   171,    38,    39,    35,    36,    27,    29,    30,    31,
    32,    11,    40,   176,    44,    11,    45,    46,    21,    88,
   184,    90,     3,    38,    39,    81,    36,    27,    29,    30,
    31,    32,    81,    40,   nil,    44,   124,    45,    46,   125,
    35,   127,   128,   nil,   129,   130,   211,   212,   nil,   nil,
   104,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
   nil,    44,    35,    45,    46,   111,   nil,   nil,    21,   nil,
   nil,   nil,   108,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
    35,    40,   nil,    44,   nil,    45,    46,   nil,    21,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
    35,    44,   nil,    45,    46,   nil,   182,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,    35,    40,
   nil,    44,   nil,    45,    46,   nil,    21,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,   nil,    40,    35,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,    35,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,     6,     7,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,   nil,   nil,   104,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,   nil,    44,    35,    45,    46,   111,
   nil,   nil,   182,   nil,   nil,   nil,   108,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,    35,    44,   nil,    45,    46,   nil,
   182,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,    35,    40,   nil,    44,   nil,    45,    46,   nil,
   182,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,    35,    44,   nil,    45,    46,   nil,   182,   nil,
   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
    35,    40,   nil,    44,   nil,    45,    46,   nil,   182,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
    35,    44,   nil,    45,    46,   nil,   182,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,    35,    40,
   nil,    44,   nil,    45,    46,   nil,   182,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,   nil,    40,    35,    44,
   nil,    45,    46,   nil,   182,   nil,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,   nil,   nil,   104,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,   nil,    44,    35,    45,
    46,   111,   nil,   nil,    21,   nil,   nil,   nil,   108,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,    35,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,    35,    44,   nil,    45,    46,   nil,
   182,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,    35,    40,   nil,    44,   nil,    45,    46,   nil,
    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,    35,    44,   nil,    45,    46,   nil,   nil,   nil,
   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,   nil,    44,   nil,    45,    46 ]

racc_action_check = [
   111,   144,    10,    15,    77,    70,   107,   107,   151,   107,
   107,   107,    40,    40,   151,   225,   107,   107,   107,   107,
   107,   107,   111,    13,    70,    70,   225,   199,   171,    10,
   172,    77,   111,   111,   144,   141,   173,   147,   199,   147,
   147,   111,   111,    15,   111,   111,   111,   111,   111,   111,
   178,   111,   180,   111,   183,   111,   111,   141,   215,   215,
   141,    13,    13,    13,    14,    14,    76,   141,   141,    76,
    75,    76,    76,   188,    76,    76,   141,   141,   200,   141,
   141,   141,   141,   141,   141,   201,   141,   181,   141,   205,
   141,   141,    75,   206,   212,    75,   213,   223,   224,   231,
   232,     0,    75,    75,   236,     1,     4,     5,   182,   181,
   182,    75,    75,     9,    75,    75,    75,    75,    75,    75,
   181,    75,    11,    75,    24,    75,    75,    27,   181,   181,
   182,   181,   181,   181,   181,   181,   181,    29,   181,    30,
   181,   182,   181,   181,   104,    31,   104,    32,    33,   182,
   182,    35,   182,   182,   182,   182,   182,   182,    36,   182,
    37,   182,    44,   182,   182,   184,   104,   184,    48,   104,
    49,    52,    61,    62,    68,    71,   104,   104,    74,    90,
    91,    92,    16,    93,    94,   104,   104,   184,   104,   104,
   104,   104,   104,   104,    95,   104,    99,   104,   184,   104,
   104,    21,   102,   103,    16,   105,   184,   184,   108,   184,
   184,   184,   184,   184,   184,    16,   184,   109,   184,   124,
   184,   184,   204,    21,   125,   126,    16,    16,    16,    16,
    16,    16,   128,    16,    21,    16,   129,    16,    16,   130,
   131,   140,    21,    21,   204,    21,    21,    21,    21,    21,
    21,   142,    21,   143,    21,   204,    21,    21,    63,   145,
   149,    63,   158,   204,   204,   164,   204,   204,   204,   204,
   204,   204,   165,   204,   nil,   204,   198,   204,   204,   198,
    63,   198,   198,   nil,   198,   198,   198,   198,   nil,   nil,
   211,    63,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    63,
    63,   nil,    63,    63,    63,    63,    63,    63,   nil,    63,
   nil,    63,   211,    63,    63,   211,   nil,   nil,    64,   nil,
   nil,   nil,   211,   211,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   211,   211,   nil,   211,   211,   211,   211,   211,   211,
    64,   211,   nil,   211,   nil,   211,   211,   nil,    65,   nil,
   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,
    64,   nil,    64,    64,    64,    64,    64,    64,   nil,    64,
    65,    64,   nil,    64,    64,   nil,   219,   nil,   nil,   nil,
   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    65,   nil,    65,    65,    65,    65,    65,    65,   219,    65,
   nil,    65,   nil,    65,    65,   nil,   222,   nil,   nil,   219,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   219,   219,   nil,
   219,   219,   219,   219,   219,   219,   nil,   219,   222,   219,
   nil,   219,   219,   nil,    66,   nil,   nil,   nil,   nil,   222,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   222,   222,   nil,
   222,   222,   222,   222,   222,   222,    66,   222,   nil,   222,
   nil,   222,   222,   nil,    67,   nil,   nil,    66,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    66,    66,   nil,    66,    66,
    66,    66,    66,    66,   nil,    66,    67,    66,   nil,    66,
    66,   nil,     3,   nil,   nil,     3,     3,    67,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    67,    67,   nil,    67,    67,
    67,    67,    67,    67,     3,    67,   nil,    67,   nil,    67,
    67,   nil,   nil,   nil,   146,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,     3,   nil,     3,     3,     3,     3,
     3,     3,   nil,     3,   nil,     3,   146,     3,     3,   146,
   nil,   nil,   148,   nil,   nil,   nil,   146,   146,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   146,   146,   nil,   146,   146,
   146,   146,   146,   146,   148,   146,   nil,   146,   nil,   146,
   146,   nil,     7,   nil,   nil,   148,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   148,   148,   nil,   148,   148,   148,   148,
   148,   148,   nil,   148,     7,   148,   nil,   148,   148,   nil,
   150,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,     7,   nil,     7,     7,     7,     7,
     7,     7,   150,     7,   nil,     7,   nil,     7,     7,   nil,
   152,   nil,   nil,   150,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   150,   150,   nil,   150,   150,   150,   150,   150,   150,
   nil,   150,   152,   150,   nil,   150,   150,   nil,   153,   nil,
   nil,   nil,   nil,   152,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   152,   152,   nil,   152,   152,   152,   152,   152,   152,
   153,   152,   nil,   152,   nil,   152,   152,   nil,   154,   nil,
   nil,   153,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   153,
   153,   nil,   153,   153,   153,   153,   153,   153,   nil,   153,
   154,   153,   nil,   153,   153,   nil,   155,   nil,   nil,   nil,
   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,
   154,   nil,   154,   154,   154,   154,   154,   154,   155,   154,
   nil,   154,   nil,   154,   154,   nil,   156,   nil,   nil,   155,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   155,   155,   nil,
   155,   155,   155,   155,   155,   155,   nil,   155,   156,   155,
   nil,   155,   155,   nil,   157,   nil,   nil,   nil,   nil,   156,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   156,   156,   nil,
   156,   156,   156,   156,   156,   156,   157,   156,   nil,   156,
   nil,   156,   156,   nil,   nil,   nil,   161,   157,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   157,   157,   nil,   157,   157,
   157,   157,   157,   157,   nil,   157,   nil,   157,   161,   157,
   157,   161,   nil,   nil,    51,   nil,   nil,   nil,   161,   161,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   161,   161,   nil,
   161,   161,   161,   161,   161,   161,    51,   161,   nil,   161,
   nil,   161,   161,   nil,    55,   nil,   nil,    51,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,    51,   nil,    51,    51,
    51,    51,    51,    51,   nil,    51,    55,    51,   nil,    51,
    51,   nil,    56,   nil,   nil,   nil,   nil,    55,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    55,    55,   nil,    55,    55,
    55,    55,    55,    55,    56,    55,   nil,    55,   nil,    55,
    55,   nil,    57,   nil,   nil,    56,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    56,    56,   nil,    56,    56,    56,    56,
    56,    56,   nil,    56,    57,    56,   nil,    56,    56,   nil,
   179,   nil,   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,    57,   nil,    57,    57,    57,    57,
    57,    57,   179,    57,   nil,    57,   nil,    57,    57,   nil,
    58,   nil,   nil,   179,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   179,   179,   nil,   179,   179,   179,   179,   179,   179,
   nil,   179,    58,   179,   nil,   179,   179,   nil,   nil,   nil,
   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    58,    58,   nil,    58,    58,    58,    58,    58,    58,
   nil,    58,   nil,    58,   nil,    58,    58 ]

racc_action_pointer = [
    97,   105,   nil,   490,   106,    98,   nil,   580,   nil,   106,
    -6,    76,   nil,    18,    21,    -2,   180,   nil,   nil,   nil,
   nil,   199,   nil,   nil,    78,   nil,   nil,   125,   nil,   135,
   137,   143,   145,    96,   nil,   105,   134,   108,   nil,   nil,
   -41,   nil,   nil,   nil,   106,   nil,   nil,   nil,   149,   135,
   nil,   842,   136,   nil,   nil,   872,   900,   930,   988,   nil,
   nil,   169,   138,   256,   316,   346,   432,   462,   150,   nil,
   -19,   122,   nil,   nil,   158,    68,    59,    -4,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   176,   177,   178,   180,   181,   191,   nil,   nil,   nil,   172,
   nil,   nil,   180,   182,   142,   169,   nil,   -21,   206,   188,
   nil,    -2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   184,   213,   214,   nil,   218,   222,
   225,   205,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   218,    33,   216,   250,    -2,   256,   522,     9,   550,   258,
   608,   -19,   638,   666,   696,   724,   754,   782,   258,   nil,
   nil,   814,   nil,   nil,   230,   237,   nil,   nil,   nil,   nil,
   nil,     7,    -6,    29,   nil,   nil,   nil,   nil,    21,   958,
    50,    85,   106,    25,   163,   nil,   nil,   nil,    40,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   269,     3,
    43,    56,   nil,   nil,   220,    86,    86,   nil,   nil,   nil,
   nil,   288,    92,    89,   nil,    33,   nil,   nil,   nil,   374,
   nil,   nil,   404,    61,    63,    -9,   nil,   nil,   nil,   nil,
   nil,    96,    93,   nil,   nil,   nil,    69,   nil ]

racc_action_default = [
  -145,  -145,    -1,  -145,  -145,    -4,    -5,  -145,    -7,    -9,
   -12,  -136,   -96,   -97,  -100,  -103,  -145,  -105,  -106,  -107,
  -108,  -145,  -110,  -111,  -145,  -114,  -115,  -145,  -117,  -145,
  -145,  -145,  -145,  -123,  -124,  -128,  -145,  -145,  -134,  -135,
  -145,  -139,  -140,  -141,  -145,  -143,  -144,   238,   -36,  -145,
    -6,  -145,  -145,   -11,  -136,  -145,  -145,  -145,  -145,  -104,
  -112,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -126,  -127,
  -145,  -145,  -138,  -142,   -38,  -145,   -13,   -16,   -17,   -19,
   -20,   -69,    -8,   -10,   -98,   -99,  -101,  -102,  -109,  -113,
  -145,  -145,  -145,  -145,  -145,  -145,  -125,  -129,  -131,  -145,
  -133,  -137,   -43,  -145,  -145,   -37,   -55,  -145,  -145,   -72,
   -74,  -145,   -77,   -78,   -79,   -81,   -82,   -83,   -84,   -85,
   -86,   -93,   -94,   -95,  -145,  -145,  -145,   -24,   -26,   -28,
   -29,  -145,   -15,  -116,  -118,  -119,  -120,  -121,  -122,  -132,
   -45,  -145,  -145,  -145,  -145,   -95,  -145,  -145,  -145,  -145,
  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,   -18,
   -68,  -145,   -76,   -21,  -145,  -145,   -25,   -27,   -30,   -14,
    -3,  -145,   -44,   -39,   -41,   -42,    -2,   -80,   -73,  -145,
  -145,  -145,  -145,  -145,  -145,   -59,   -60,   -65,  -145,   -67,
   -87,   -88,   -89,   -90,   -91,   -92,   -75,   -22,  -145,  -145,
  -145,  -145,   -58,   -64,  -145,  -145,   -63,   -66,   -23,   -31,
   -32,  -145,  -145,   -46,   -48,   -52,   -50,   -51,   -40,  -145,
   -57,   -61,  -145,   -33,  -145,  -145,   -49,   -53,   -54,   -56,
   -62,  -145,   -35,   -71,   -47,   -34,  -145,   -70 ]

racc_goto_table = [
    53,    10,   105,    77,    76,    10,     8,   159,   175,   205,
    50,   174,   185,   214,    84,    85,    60,    86,    87,    61,
   183,   226,   187,   178,   190,   191,   192,   193,   194,   195,
   196,   144,   162,    99,    59,    97,     1,    98,     2,   234,
     5,    48,    83,   202,    74,   102,   140,   230,   159,    10,
   170,   201,    89,   203,    82,    60,    60,    60,    60,   160,
   208,    91,    92,    93,    94,    95,   175,   132,   172,   218,
   209,   210,   231,   232,   173,   213,   220,   nil,   163,   159,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   229,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   145,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   197,    77,
   198,   169,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   223,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    61,   nil,   206,   nil,   nil,   nil,   nil,   nil,   nil,   216,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   233,   216,   nil,   nil,   nil,   nil,
   206,   nil,   nil,   nil,   nil,   nil,   237 ]

racc_goto_check = [
    13,    12,    24,    15,    14,    12,    10,     3,    29,    39,
    10,    28,    38,    31,    50,    50,    51,    52,    52,    12,
    36,    33,    36,    43,    36,    36,    36,    36,    36,    36,
    44,    24,    45,    54,    55,    65,     1,    66,     2,    31,
     4,     5,    13,    38,     6,     7,     8,    39,     3,    12,
     9,    36,    13,    36,    10,    51,    51,    51,    51,    17,
    21,    12,    12,    12,    12,    12,    29,    13,    24,    28,
    22,    23,    25,    26,    27,    30,    36,   nil,    15,     3,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    36,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    15,
    14,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    24,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    12,   nil,    12,   nil,   nil,   nil,   nil,   nil,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    13,    13,   nil,   nil,   nil,   nil,
    12,   nil,   nil,   nil,   nil,   nil,    13 ]

racc_goto_pointer = [
   nil,    36,    38,  -101,    37,    36,    -4,   -29,   -56,   -90,
     3,   nil,    -2,   -10,   -45,   -46,   nil,   -49,   nil,   nil,
   nil,  -138,  -128,  -127,   -73,  -152,  -151,   -68,  -131,  -134,
  -124,  -186,   nil,  -194,   nil,   nil,  -128,   nil,  -137,  -175,
   nil,   nil,   nil,  -123,  -131,   -79,   nil,   nil,   nil,   nil,
   -41,     0,   -40,   nil,   -37,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   -35,   -33,   nil,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   143,   106,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     9,   123,    25,   nil,    26,    78,   186,    79,    80,
   126,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   215,   nil,   122,   116,   107,   117,   nil,   nil,
   118,   119,   120,   109,   110,   112,   113,   114,   115,   121,
    12,    13,    14,    15,    16,    17,    18,    20,    22,    23,
    24,    28,    33,    34,    37,   nil,   nil,    41,    42,    43 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 60, :_reduce_none,
  3, 62, :_reduce_2,
  7, 61, :_reduce_3,
  2, 61, :_reduce_4,
  1, 63, :_reduce_5,
  2, 63, :_reduce_6,
  1, 63, :_reduce_7,
  3, 69, :_reduce_8,
  1, 69, :_reduce_none,
  3, 70, :_reduce_10,
  2, 70, :_reduce_11,
  1, 70, :_reduce_none,
  2, 64, :_reduce_13,
  3, 73, :_reduce_14,
  2, 73, :_reduce_15,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 76, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  3, 77, :_reduce_21,
  4, 77, :_reduce_22,
  5, 78, :_reduce_23,
  1, 79, :_reduce_24,
  2, 79, :_reduce_25,
  1, 79, :_reduce_26,
  2, 79, :_reduce_27,
  1, 79, :_reduce_28,
  1, 79, :_reduce_29,
  2, 79, :_reduce_30,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  2, 81, :_reduce_33,
  4, 82, :_reduce_34,
  1, 84, :_reduce_none,
  0, 65, :_reduce_none,
  2, 65, :_reduce_37,
  0, 66, :_reduce_none,
  3, 66, :_reduce_39,
  3, 86, :_reduce_40,
  1, 86, :_reduce_none,
  1, 87, :_reduce_none,
  0, 67, :_reduce_none,
  2, 67, :_reduce_44,
  0, 68, :_reduce_none,
  3, 68, :_reduce_46,
  3, 89, :_reduce_47,
  1, 89, :_reduce_none,
  2, 90, :_reduce_49,
  1, 91, :_reduce_none,
  1, 91, :_reduce_51,
  0, 92, :_reduce_52,
  1, 92, :_reduce_53,
  1, 92, :_reduce_54,
  1, 93, :_reduce_none,
  6, 94, :_reduce_56,
  5, 94, :_reduce_57,
  4, 96, :_reduce_58,
  3, 96, :_reduce_59,
  1, 97, :_reduce_none,
  3, 97, :_reduce_61,
  3, 98, :_reduce_62,
  1, 98, :_reduce_none,
  4, 99, :_reduce_64,
  3, 99, :_reduce_65,
  4, 100, :_reduce_66,
  3, 100, :_reduce_67,
  2, 101, :_reduce_68,
  1, 74, :_reduce_69,
  3, 85, :_reduce_70,
  1, 85, :_reduce_none,
  1, 83, :_reduce_none,
  3, 83, :_reduce_73,
  1, 102, :_reduce_none,
  3, 102, :_reduce_75,
  2, 103, :_reduce_76,
  1, 103, :_reduce_none,
  1, 104, :_reduce_none,
  1, 105, :_reduce_none,
  3, 105, :_reduce_80,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  3, 107, :_reduce_87,
  3, 107, :_reduce_88,
  3, 107, :_reduce_89,
  3, 107, :_reduce_90,
  3, 107, :_reduce_91,
  3, 107, :_reduce_92,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 108, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  3, 109, :_reduce_98,
  3, 109, :_reduce_99,
  1, 109, :_reduce_none,
  3, 111, :_reduce_101,
  3, 111, :_reduce_102,
  1, 111, :_reduce_none,
  2, 112, :_reduce_104,
  1, 112, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_109,
  1, 115, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  3, 88, :_reduce_113,
  1, 88, :_reduce_none,
  1, 119, :_reduce_none,
  4, 116, :_reduce_116,
  1, 116, :_reduce_none,
  4, 120, :_reduce_118,
  4, 120, :_reduce_119,
  4, 120, :_reduce_120,
  4, 120, :_reduce_121,
  4, 120, :_reduce_122,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  3, 121, :_reduce_125,
  2, 121, :_reduce_126,
  2, 121, :_reduce_127,
  1, 121, :_reduce_128,
  3, 122, :_reduce_129,
  1, 123, :_reduce_none,
  1, 124, :_reduce_none,
  2, 125, :_reduce_132,
  1, 125, :_reduce_133,
  1, 113, :_reduce_134,
  1, 113, :_reduce_135,
  1, 72, :_reduce_136,
  3, 110, :_reduce_137,
  2, 110, :_reduce_138,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  1, 126, :_reduce_none,
  2, 128, :_reduce_142,
  1, 127, :_reduce_143,
  1, 127, :_reduce_144 ]

racc_reduce_n = 145

racc_shift_n = 238

racc_token_table = {
  false => 0,
  :error => 1,
  :left_paren => 2,
  :right_paren => 3,
  :SELECT => 4,
  :asterisk => 5,
  :DISTINCT => 6,
  :comma => 7,
  :AS => 8,
  :FROM => 9,
  :CROSS => 10,
  :JOIN => 11,
  :INNER => 12,
  :LEFT => 13,
  :OUTER => 14,
  :RIGHT => 15,
  :FULL => 16,
  :ON => 17,
  :USING => 18,
  :WHERE => 19,
  :GROUP => 20,
  :BY => 21,
  :HAVING => 22,
  :ORDER => 23,
  :unsigned_integer => 24,
  :ASC => 25,
  :DESC => 26,
  :NOT => 27,
  :BETWEEN => 28,
  :AND => 29,
  :IN => 30,
  :LIKE => 31,
  :IS => 32,
  :NULL => 33,
  :EXISTS => 34,
  :identifier => 35,
  :OR => 36,
  :equals_operator => 37,
  :not_equals_operator => 38,
  :less_than_operator => 39,
  :greater_than_operator => 40,
  :less_than_or_equals_operator => 41,
  :greater_than_or_equals_operator => 42,
  :plus_sign => 43,
  :minus_sign => 44,
  :solidus => 45,
  :period => 46,
  :COUNT => 47,
  :AVG => 48,
  :MAX => 49,
  :MIN => 50,
  :SUM => 51,
  :E => 52,
  :quote => 53,
  :character_string_literal => 54,
  :DATE => 55,
  :date_string => 56,
  :TRUE => 57,
  :FALSE => 58 }

racc_nt_base = 59

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "DISTINCT",
  "comma",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "TRUE",
  "FALSE",
  "$start",
  "statement",
  "select_statement",
  "subquery",
  "select_list",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "boolean_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2], val[3], val[4], val[5], val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[1], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_7(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_8(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 24)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 32)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 45)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_23(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 64)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 74)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 78)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_40(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.racc', 89)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 93)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_47(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 100)
  def _reduce_49(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 104)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 115)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 116)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::InValueList.new(Array(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 134)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 135)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_70(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 157)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 168)
  def _reduce_80(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 179)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 180)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 198)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 203)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.racc', 208)
  def _reduce_104(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 215)
  def _reduce_109(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 225)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 232)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 236)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 237)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 247)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 248)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 262)
  def _reduce_132(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 263)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 267)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 274)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'parser.racc', 282)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::True.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 286)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::False.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
