#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 299)

def self.parse(sql)
  new.scan_str(sql)
rescue Racc::ParseError => err
  raise err.to_s.strip
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
    92,  -122,   119,   163,   215,    88,    47,   206,   112,   206,
   208,   113,   210,   115,   116,   168,   117,   118,   199,   200,
    49,    30,    49,   174,   211,   214,    99,    33,    34,   175,
    21,    49,   213,    96,    10,    49,    30,   130,   165,   216,
   166,   167,    11,    33,    34,   168,    31,   -72,    35,    10,
    39,    30,    40,    41,    50,    51,   130,    11,    33,    34,
    21,    31,     3,    35,    10,    39,    30,    40,    41,   218,
   219,    49,    11,    33,    34,    21,    31,   225,    35,    10,
    39,    30,    40,    41,    63,    62,   226,    11,    33,    34,
    21,    31,     3,    35,    10,    39,    30,    40,    41,   228,
   229,     3,    11,    33,    34,    49,    31,     4,    35,    10,
    39,    30,    40,    41,    92,    42,    44,    11,    33,    34,
    46,    31,    57,    35,    10,    39,    58,    40,    41,    21,
  -132,    59,    11,    33,    34,    30,    31,    60,    35,    61,
    39,    64,    40,    41,    21,    66,   121,    96,    10,   122,
    30,  -116,  -116,  -116,  -116,    21,    11,    33,    34,    72,
    31,    49,    35,    10,    39,    30,    40,    41,    52,    79,
   168,    53,    33,    34,    49,    31,    30,    35,    10,    39,
    84,    40,    41,    89,    91,    21,   123,    33,    34,    10,
    31,    30,    35,   125,    39,   126,    40,    41,    33,    34,
   130,    31,   142,    35,    10,    39,    30,    40,    41,   145,
    72,   148,    11,    33,    34,   149,    31,   150,    35,    10,
    39,    21,    40,    41,     6,   151,   152,    49,    33,    34,
   156,    31,   161,    35,   162,    39,    79,    40,    41,   170,
     3,    72,    30,    72,   186,   187,   130,   131,   132,    92,
   133,   134,   135,   188,   -72,    10,   145,   136,   137,   138,
   139,   140,   141,    11,    33,    34,   170,    31,   192,    35,
    30,    39,   195,    40,    41,    99,   201,    21,    81,   161,
   nil,   112,    96,    10,   113,   nil,   115,   116,   nil,   117,
   118,    11,    33,    34,   168,    31,   nil,    35,    30,    39,
   nil,    40,    41,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    10,   nil,   nil,    21,    30,   nil,   nil,   nil,    11,
    33,    34,   nil,    31,   nil,    35,   nil,    39,    10,    40,
    41,    21,   nil,   nil,   nil,    30,    11,    33,    34,   nil,
    31,   nil,    35,   nil,    39,   nil,    40,    41,    10,   nil,
   nil,   nil,    30,   nil,   nil,   nil,    11,    33,    34,    92,
    31,   nil,    35,   nil,    39,    10,    40,    41,   nil,   nil,
   nil,   nil,   nil,    11,    33,    34,   168,    31,   nil,    35,
    30,    39,   nil,    40,    41,    99,   nil,   nil,   nil,   nil,
   nil,   nil,    96,    10,   nil,   nil,   nil,    30,   nil,   nil,
   nil,    11,    33,    34,    92,    31,   nil,    35,   nil,    39,
    10,    40,    41,   nil,   nil,   nil,   nil,   nil,    11,    33,
    34,   168,    31,   nil,    35,    30,    39,   nil,    40,    41,
    99,   nil,   nil,   nil,   nil,   nil,   nil,    96,    10,   nil,
   nil,   168,    30,   nil,   nil,   nil,    11,    33,    34,   nil,
    31,   nil,    35,   nil,    39,    10,    40,    41,   168,   nil,
   nil,   nil,    30,    11,    33,    34,   nil,    31,   nil,    35,
   nil,    39,   nil,    40,    41,    10,   nil,   nil,   168,    30,
   nil,   nil,   nil,    11,    33,    34,   nil,    31,   nil,    35,
   nil,    39,    10,    40,    41,   168,   nil,   nil,   nil,    30,
    11,    33,    34,   nil,    31,   nil,    35,   nil,    39,   nil,
    40,    41,    10,   nil,   nil,   168,    30,   nil,   nil,   nil,
    11,    33,    34,   nil,    31,   nil,    35,   nil,    39,    10,
    40,    41,   168,   nil,   nil,   nil,    30,    11,    33,    34,
   nil,    31,   nil,    35,   nil,    39,   nil,    40,    41,    10,
   nil,   nil,   nil,    30,   nil,   nil,   nil,    11,    33,    34,
    92,    31,   nil,    35,   nil,    39,    10,    40,    41,   nil,
   nil,    21,   nil,   nil,    11,    33,    34,   nil,    31,   nil,
    35,    30,    39,   nil,    40,    41,    99,   nil,   nil,   nil,
   nil,   nil,    30,    96,    10,   nil,   nil,   nil,   nil,    92,
   nil,     3,    11,    33,    34,    10,    31,   nil,    35,   nil,
    39,   nil,    40,    41,    21,   nil,   nil,    31,   nil,    35,
    30,    39,   nil,    40,    41,    99,   nil,   nil,   nil,   nil,
   nil,   nil,    96,    10,   nil,    30,   nil,   nil,   nil,   nil,
   nil,    11,    33,    34,   nil,    31,   nil,    35,    10,    39,
   nil,    40,    41,   nil,   nil,   nil,    11,    33,    34,   nil,
    31,   nil,    35,   nil,    39,   nil,    40,    41 ]

racc_action_check = [
   130,    10,    68,   128,   201,    61,     9,   187,   184,   216,
   189,   184,   193,   184,   184,   165,   184,   184,   184,   184,
   187,   130,   216,   135,   194,   201,   130,    61,    61,   135,
    46,    68,   200,   130,   130,     9,   165,   128,   131,   202,
   131,   131,   130,   130,   130,   167,   130,    10,   130,   165,
   130,    46,   130,   130,    14,    14,   212,   165,   165,   165,
   168,   165,   168,   165,    46,   165,   167,   165,   165,   204,
   204,   213,    46,    46,    46,     6,    46,   214,    46,   167,
    46,   168,    46,    46,    35,    35,   215,   167,   167,   167,
   170,   167,   170,   167,   168,   167,     6,   167,   167,   222,
   223,     0,   168,   168,   168,   229,   168,     1,   168,     6,
   168,   170,   168,   168,    99,     4,     5,     6,     6,     6,
     8,     6,    24,     6,   170,     6,    27,     6,     6,    50,
    28,    30,   170,   170,   170,    99,   170,    31,   170,    32,
   170,    39,   170,   170,    51,    43,    82,    99,    99,    82,
    50,    13,    13,    13,    13,    52,    99,    99,    99,    44,
    99,    47,    99,    50,    99,    51,    99,    99,    15,    56,
   192,    15,    50,    50,    57,    50,    52,    50,    51,    50,
    59,    50,    50,    62,    65,    53,    87,    51,    51,    52,
    51,   192,    51,    90,    51,    91,    51,    51,    52,    52,
    93,    52,    96,    52,   192,    52,    53,    52,    52,    97,
   112,   113,   192,   192,   192,   114,   192,   116,   192,    53,
   192,     3,   192,   192,     3,   117,   118,   119,    53,    53,
   124,    53,   126,    53,   127,    53,   129,    53,    53,   133,
   142,   148,     3,   149,   155,   156,   157,    95,    95,   199,
    95,    95,    95,   158,   161,     3,   164,    95,    95,    95,
    95,    95,    95,     3,     3,     3,   166,     3,   169,     3,
   199,     3,   174,     3,     3,   199,   186,    58,    58,   188,
   nil,    67,   199,   199,    67,   nil,    67,    67,   nil,    67,
    67,   199,   199,   199,   208,   199,   nil,   199,    58,   199,
   nil,   199,   199,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    58,   nil,   nil,   211,   208,   nil,   nil,   nil,    58,
    58,    58,   nil,    58,   nil,    58,   nil,    58,   208,    58,
    58,   122,   nil,   nil,   nil,   211,   208,   208,   208,   nil,
   208,   nil,   208,   nil,   208,   nil,   208,   208,   211,   nil,
   nil,   nil,   122,   nil,   nil,   nil,   211,   211,   211,   125,
   211,   nil,   211,   nil,   211,   122,   211,   211,   nil,   nil,
   nil,   nil,   nil,   122,   122,   122,   132,   122,   nil,   122,
   125,   122,   nil,   122,   122,   125,   nil,   nil,   nil,   nil,
   nil,   nil,   125,   125,   nil,   nil,   nil,   132,   nil,   nil,
   nil,   125,   125,   125,    66,   125,   nil,   125,   nil,   125,
   132,   125,   125,   nil,   nil,   nil,   nil,   nil,   132,   132,
   132,   134,   132,   nil,   132,    66,   132,   nil,   132,   132,
    66,   nil,   nil,   nil,   nil,   nil,   nil,    66,    66,   nil,
   nil,   136,   134,   nil,   nil,   nil,    66,    66,    66,   nil,
    66,   nil,    66,   nil,    66,   134,    66,    66,   137,   nil,
   nil,   nil,   136,   134,   134,   134,   nil,   134,   nil,   134,
   nil,   134,   nil,   134,   134,   136,   nil,   nil,   138,   137,
   nil,   nil,   nil,   136,   136,   136,   nil,   136,   nil,   136,
   nil,   136,   137,   136,   136,   139,   nil,   nil,   nil,   138,
   137,   137,   137,   nil,   137,   nil,   137,   nil,   137,   nil,
   137,   137,   138,   nil,   nil,   140,   139,   nil,   nil,   nil,
   138,   138,   138,   nil,   138,   nil,   138,   nil,   138,   139,
   138,   138,   141,   nil,   nil,   nil,   140,   139,   139,   139,
   nil,   139,   nil,   139,   nil,   139,   nil,   139,   139,   140,
   nil,   nil,   nil,   141,   nil,   nil,   nil,   140,   140,   140,
   145,   140,   nil,   140,   nil,   140,   141,   140,   140,   nil,
   nil,    16,   nil,   nil,   141,   141,   141,   nil,   141,   nil,
   141,   145,   141,   nil,   141,   141,   145,   nil,   nil,   nil,
   nil,   nil,    16,   145,   145,   nil,   nil,   nil,   nil,    92,
   nil,    92,   145,   145,   145,    16,   145,   nil,   145,   nil,
   145,   nil,   145,   145,    21,   nil,   nil,    16,   nil,    16,
    92,    16,   nil,    16,    16,    92,   nil,   nil,   nil,   nil,
   nil,   nil,    92,    92,   nil,    21,   nil,   nil,   nil,   nil,
   nil,    92,    92,    92,   nil,    92,   nil,    92,    21,    92,
   nil,    92,    92,   nil,   nil,   nil,    21,    21,    21,   nil,
    21,   nil,    21,   nil,    21,   nil,    21,    21 ]

racc_action_pointer = [
    97,   107,   nil,   219,   115,   108,    73,   nil,   114,    -1,
    -1,   nil,   nil,   107,     9,   124,   569,   nil,   nil,   nil,
   nil,   612,   nil,   nil,    74,   nil,   nil,   124,    81,   nil,
    83,   114,    90,   nil,   nil,    34,   nil,   nil,   nil,    88,
   nil,   nil,   nil,   127,   123,   nil,    28,   125,   nil,   nil,
   127,   142,   153,   183,   nil,   nil,   166,   138,   275,   157,
   nil,   -18,   133,   nil,   nil,   165,   402,   275,    -5,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   143,   nil,   nil,   nil,   nil,   163,   nil,   nil,
   172,   175,   597,   163,   nil,   219,   200,   179,   nil,   112,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   174,   201,   205,   nil,   204,   212,   213,   191,
   nil,   nil,   329,   nil,   208,   357,   196,   231,     0,   233,
    -2,     9,   374,   237,   419,    -5,   439,   456,   476,   493,
   513,   530,   236,   nil,   nil,   558,   nil,   nil,   205,   207,
   nil,   nil,   nil,   nil,   nil,   218,   225,   209,   247,   nil,
   nil,   206,   nil,   nil,   226,    13,   264,    43,    58,   238,
    88,   nil,   nil,   nil,   238,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   nil,   253,   -16,   243,   -20,
   nil,   nil,   168,     9,    18,   nil,   nil,   nil,   nil,   247,
    30,    -2,    33,   nil,    45,   nil,   nil,   nil,   292,   nil,
   nil,   312,    19,    35,    54,    63,   -14,   nil,   nil,   nil,
   nil,   nil,    96,    94,   nil,   nil,   nil,   nil,   nil,    69,
   nil ]

racc_action_default = [
  -147,  -147,    -1,  -147,  -147,    -4,  -147,    -6,    -8,   -11,
  -138,   -99,  -100,  -101,  -104,  -107,  -147,  -109,  -110,  -111,
  -112,  -147,  -114,  -115,  -147,  -118,  -119,  -147,  -125,  -126,
  -130,  -147,  -147,  -136,  -137,  -147,  -141,  -142,  -143,  -147,
  -145,  -146,   231,   -35,  -147,    -5,  -147,  -147,   -10,  -138,
  -147,  -147,  -147,  -147,  -108,  -116,  -147,  -147,  -147,  -128,
  -129,  -147,  -147,  -140,  -144,   -37,  -147,   -12,   -15,   -16,
   -18,   -19,   -72,    -7,    -9,  -102,  -103,  -105,  -106,  -113,
  -117,  -120,  -147,  -124,  -127,  -131,  -133,  -147,  -135,  -139,
   -42,  -147,  -147,   -36,   -58,  -147,  -147,   -75,   -77,  -147,
   -80,   -81,   -82,   -84,   -85,   -86,   -87,   -88,   -89,   -96,
   -97,   -98,  -147,  -147,  -147,   -23,   -25,   -27,   -28,  -147,
   -14,  -121,  -147,  -134,   -44,  -147,  -147,  -147,  -147,   -98,
  -147,  -147,  -147,  -147,  -147,  -147,  -147,  -147,  -147,  -147,
  -147,  -147,  -147,   -17,   -71,  -147,   -79,   -20,  -147,  -147,
   -24,   -26,   -29,   -13,  -123,   -54,  -147,   -43,   -38,   -40,
   -41,  -138,    -2,   -83,   -76,  -147,  -147,  -147,  -147,  -147,
  -147,   -62,   -63,   -68,  -147,   -70,   -90,   -91,   -92,   -93,
   -94,   -95,   -78,   -21,  -147,    -3,  -147,  -147,  -147,  -147,
   -61,   -67,  -147,  -147,   -66,   -69,   -22,   -30,   -31,  -147,
  -147,   -57,   -45,   -47,   -51,   -49,   -50,   -39,  -147,   -60,
   -64,  -147,   -32,  -147,  -147,  -147,  -147,   -48,   -52,   -53,
   -59,   -65,  -147,   -34,   -74,   -55,   -56,   -46,   -33,  -147,
   -73 ]

racc_goto_table = [
    48,     9,    93,    68,     9,   193,    67,   169,   143,   173,
   160,   176,   177,   178,   179,   180,   181,   159,    55,    56,
     7,   203,   202,    45,   171,    77,    78,   217,   128,    75,
    76,   164,   182,   146,    87,    54,    82,    85,    74,     1,
   189,    86,   191,     2,     9,   143,   221,     5,    80,    43,
   227,    65,    55,    55,    55,    55,    83,   190,    90,   120,
   124,   157,   155,    73,   185,   144,   196,   209,   197,   198,
   222,   147,   160,   223,   158,   nil,   nil,   nil,   143,   207,
   nil,   nil,   nil,   220,   nil,   nil,   nil,   nil,   nil,   nil,
   129,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   183,    68,   nil,
   153,   184,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   212,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    56,   nil,   194,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   224,   nil,   nil,   205,   nil,   194,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   230 ]

racc_goto_check = [
    14,    13,    25,    16,    13,    40,    15,    37,     3,    37,
    30,    37,    37,    37,    37,    37,    37,    29,    52,    13,
    11,    32,    31,    11,    39,    53,    53,    34,    25,    51,
    51,    44,    45,    46,    55,    56,    63,    67,    14,     1,
    37,    68,    37,     2,    13,     3,    40,     4,    14,     5,
    32,     6,    52,    52,    52,    52,    13,    39,     7,    14,
     8,    25,     9,    11,    10,    18,    22,    37,    23,    24,
    26,    16,    30,    27,    28,   nil,   nil,   nil,     3,    29,
   nil,   nil,   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    16,    16,   nil,
    14,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    25,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,    13,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    14,   nil,   nil,    14,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    14 ]

racc_goto_pointer = [
   nil,    39,    43,   -88,    44,    44,     8,    -7,   -30,   -62,
   -91,    17,   nil,    -2,    -9,   -38,   -41,   nil,   -31,   nil,
   nil,   nil,  -118,  -116,  -115,   -64,  -143,  -140,   -52,  -109,
  -116,  -165,  -166,   nil,  -177,   nil,   nil,  -125,   nil,  -109,
  -165,   nil,   nil,   nil,   -99,  -113,   -66,   nil,   nil,   nil,
   nil,   -21,     2,   -27,   nil,   -27,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   -22,   nil,   nil,   nil,   -24,   -20,   nil,
   nil,   nil ]

racc_goto_default = [
   nil,   nil,   127,    94,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     8,   111,    25,   nil,    26,    69,   172,    70,
    71,   114,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   204,   nil,   110,   104,    95,   105,   nil,
   nil,   106,   107,   108,    97,    98,   100,   101,   102,   103,
   109,    12,    13,    14,    15,    16,    17,    18,    20,    22,
    23,    24,    27,   nil,    28,    29,    32,   nil,   nil,    36,
    37,    38 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 57, :_reduce_none,
  3, 59, :_reduce_2,
  8, 58, :_reduce_3,
  2, 58, :_reduce_4,
  2, 60, :_reduce_5,
  1, 60, :_reduce_6,
  3, 67, :_reduce_7,
  1, 67, :_reduce_none,
  3, 68, :_reduce_9,
  2, 68, :_reduce_10,
  1, 68, :_reduce_none,
  2, 61, :_reduce_12,
  3, 71, :_reduce_13,
  2, 71, :_reduce_14,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 74, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  3, 75, :_reduce_20,
  4, 75, :_reduce_21,
  5, 76, :_reduce_22,
  1, 77, :_reduce_23,
  2, 77, :_reduce_24,
  1, 77, :_reduce_25,
  2, 77, :_reduce_26,
  1, 77, :_reduce_27,
  1, 77, :_reduce_28,
  2, 77, :_reduce_29,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  2, 79, :_reduce_32,
  4, 80, :_reduce_33,
  1, 82, :_reduce_none,
  0, 62, :_reduce_none,
  2, 62, :_reduce_36,
  0, 63, :_reduce_none,
  3, 63, :_reduce_38,
  3, 84, :_reduce_39,
  1, 84, :_reduce_none,
  1, 85, :_reduce_none,
  0, 64, :_reduce_none,
  2, 64, :_reduce_43,
  0, 65, :_reduce_none,
  3, 65, :_reduce_45,
  3, 87, :_reduce_46,
  1, 87, :_reduce_none,
  2, 88, :_reduce_48,
  1, 89, :_reduce_none,
  1, 89, :_reduce_50,
  0, 90, :_reduce_51,
  1, 90, :_reduce_52,
  1, 90, :_reduce_53,
  0, 66, :_reduce_none,
  4, 66, :_reduce_55,
  4, 66, :_reduce_56,
  2, 66, :_reduce_57,
  1, 91, :_reduce_none,
  6, 92, :_reduce_59,
  5, 92, :_reduce_60,
  4, 94, :_reduce_61,
  3, 94, :_reduce_62,
  1, 95, :_reduce_none,
  3, 95, :_reduce_64,
  3, 96, :_reduce_65,
  1, 96, :_reduce_none,
  4, 97, :_reduce_67,
  3, 97, :_reduce_68,
  4, 98, :_reduce_69,
  3, 98, :_reduce_70,
  2, 99, :_reduce_71,
  1, 72, :_reduce_72,
  3, 83, :_reduce_73,
  1, 83, :_reduce_none,
  1, 81, :_reduce_none,
  3, 81, :_reduce_76,
  1, 100, :_reduce_none,
  3, 100, :_reduce_78,
  2, 101, :_reduce_79,
  1, 101, :_reduce_none,
  1, 102, :_reduce_none,
  1, 103, :_reduce_none,
  3, 103, :_reduce_83,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 105, :_reduce_90,
  3, 105, :_reduce_91,
  3, 105, :_reduce_92,
  3, 105, :_reduce_93,
  3, 105, :_reduce_94,
  3, 105, :_reduce_95,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 106, :_reduce_none,
  1, 69, :_reduce_99,
  1, 69, :_reduce_none,
  1, 69, :_reduce_none,
  3, 107, :_reduce_102,
  3, 107, :_reduce_103,
  1, 107, :_reduce_none,
  3, 109, :_reduce_105,
  3, 109, :_reduce_106,
  1, 109, :_reduce_none,
  2, 110, :_reduce_108,
  1, 110, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  3, 112, :_reduce_113,
  1, 113, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 86, :_reduce_117,
  1, 86, :_reduce_none,
  1, 117, :_reduce_none,
  3, 114, :_reduce_120,
  4, 114, :_reduce_121,
  1, 118, :_reduce_none,
  3, 119, :_reduce_123,
  1, 119, :_reduce_none,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  3, 120, :_reduce_127,
  2, 120, :_reduce_128,
  2, 120, :_reduce_129,
  1, 120, :_reduce_130,
  3, 121, :_reduce_131,
  1, 122, :_reduce_none,
  1, 123, :_reduce_none,
  2, 124, :_reduce_134,
  1, 124, :_reduce_135,
  1, 111, :_reduce_136,
  1, 111, :_reduce_137,
  1, 70, :_reduce_138,
  3, 108, :_reduce_139,
  2, 108, :_reduce_140,
  1, 108, :_reduce_none,
  1, 108, :_reduce_none,
  1, 125, :_reduce_none,
  2, 127, :_reduce_144,
  1, 126, :_reduce_145,
  1, 126, :_reduce_146 ]

racc_reduce_n = 147

racc_shift_n = 231

racc_token_table = {
  false => 0,
  :error => 1,
  :left_paren => 2,
  :right_paren => 3,
  :SELECT => 4,
  :DISTINCT => 5,
  :comma => 6,
  :AS => 7,
  :FROM => 8,
  :CROSS => 9,
  :JOIN => 10,
  :INNER => 11,
  :LEFT => 12,
  :OUTER => 13,
  :RIGHT => 14,
  :FULL => 15,
  :ON => 16,
  :USING => 17,
  :WHERE => 18,
  :GROUP => 19,
  :BY => 20,
  :HAVING => 21,
  :ORDER => 22,
  :unsigned_integer => 23,
  :ASC => 24,
  :DESC => 25,
  :LIMIT => 26,
  :OFFSET => 27,
  :NOT => 28,
  :BETWEEN => 29,
  :AND => 30,
  :IN => 31,
  :LIKE => 32,
  :IS => 33,
  :NULL => 34,
  :EXISTS => 35,
  :identifier => 36,
  :OR => 37,
  :equals_operator => 38,
  :not_equals_operator => 39,
  :less_than_operator => 40,
  :greater_than_operator => 41,
  :less_than_or_equals_operator => 42,
  :greater_than_or_equals_operator => 43,
  :asterisk => 44,
  :plus_sign => 45,
  :minus_sign => 46,
  :solidus => 47,
  :period => 48,
  :E => 49,
  :quote => 50,
  :character_string_literal => 51,
  :DATE => 52,
  :date_string => 53,
  :TRUE => 54,
  :FALSE => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "left_paren",
  "right_paren",
  "SELECT",
  "DISTINCT",
  "comma",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "unsigned_integer",
  "ASC",
  "DESC",
  "LIMIT",
  "OFFSET",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "asterisk",
  "plus_sign",
  "minus_sign",
  "solidus",
  "period",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "TRUE",
  "FALSE",
  "$start",
  "statement",
  "select_statement",
  "subquery",
  "select_list",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "limit_clause",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "function_name",
  "function_arguments",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "boolean_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2], val[3], val[4], val[5], val[6], val[7]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[1], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 15 omitted

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

module_eval(<<'.,.,', 'parser.racc', 43)
  def _reduce_20(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 44)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_22(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 52)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 30 omitted

# reduce 31 omitted

module_eval(<<'.,.,', 'parser.racc', 63)
  def _reduce_32(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'parser.racc', 73)
  def _reduce_36(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_39(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

module_eval(<<'.,.,', 'parser.racc', 88)
  def _reduce_43(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_46(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_48(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_50(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 108)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 54 omitted

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 113)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(val[3], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 114)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::LimitClause.new(val[1]) 
    result
  end
.,.,

# reduce 58 omitted

module_eval(<<'.,.,', 'parser.racc', 120)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 124)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 125)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 132)
  def _reduce_65(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 66 omitted

module_eval(<<'.,.,', 'parser.racc', 139)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 143)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_71(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_72(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 153)
  def _reduce_73(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 158)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 77 omitted

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_78(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 165)
  def _reduce_79(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 80 omitted

# reduce 81 omitted

# reduce 82 omitted

module_eval(<<'.,.,', 'parser.racc', 173)
  def _reduce_83(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 188)
  def _reduce_94(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 189)
  def _reduce_95(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 199)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

# reduce 100 omitted

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.racc', 204)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 209)
  def _reduce_105(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_106(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 107 omitted

module_eval(<<'.,.,', 'parser.racc', 214)
  def _reduce_108(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 109 omitted

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 221)
  def _reduce_113(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 114 omitted

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 231)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 118 omitted

# reduce 119 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Function.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 122 omitted

module_eval(<<'.,.,', 'parser.racc', 245)
  def _reduce_123(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

# reduce 126 omitted

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 254)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 259)
  def _reduce_131(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 132 omitted

# reduce 133 omitted

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_134(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 279)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 280)
  def _reduce_140(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 141 omitted

# reduce 142 omitted

# reduce 143 omitted

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 291)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::True.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 292)
  def _reduce_146(val, _values, result)
     result = SQLParser::Statement::False.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
