#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 290)

def self.parse(sql)
  new.scan_str(sql)
rescue Racc::ParseError => err
  raise err.to_s.strip
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   100,    48,   173,    53,   213,    77,    96,   195,   120,   127,
   142,   121,   213,   123,   124,    50,   125,   126,   207,   208,
   196,    34,   157,    50,   107,    37,    38,   180,    50,  -112,
   200,   104,    10,   100,   142,     3,    50,    68,    67,   203,
    37,    38,    54,    35,    26,    28,    29,    30,    31,   184,
    39,    10,    42,   215,    34,   185,   175,   107,   176,   177,
   217,   178,   223,   224,   104,    10,  -112,  -112,  -112,    51,
    52,   218,   220,    37,    38,   221,    35,    26,    28,    29,
    30,    31,    34,    39,   142,    42,    50,   231,   232,    20,
     3,     3,    50,    10,     4,    43,    46,    47,   -69,    58,
    59,    37,    38,    60,    35,    26,    28,    29,    30,    31,
    34,    39,    61,    42,    62,    63,  -130,    20,    64,   120,
     6,    10,   121,    65,   123,   124,    66,   125,   126,    37,
    38,    69,    35,    26,    28,    29,    30,    31,    34,    39,
    71,    42,    77,    50,    84,    20,    50,     3,    92,    10,
    97,    99,   129,   130,   131,   132,   133,    37,    38,   134,
    35,    26,    28,    29,    30,    31,    34,    39,   135,    42,
   137,   138,   142,    20,   154,   157,    86,    10,    77,   160,
   161,   162,   163,   164,    50,    37,    38,   167,    35,    26,
    28,    29,    30,    31,    34,    39,    10,    42,   172,    84,
   180,    20,     3,    77,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    42,   nil,   nil,   nil,   178,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    42,   nil,   nil,   nil,   100,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    42,   nil,   nil,   nil,    20,   nil,   nil,   104,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,    34,    39,   nil,    42,
   nil,   nil,   nil,   nil,   nil,   100,   nil,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,
    28,    29,    30,    31,   nil,    39,    34,    42,   nil,   107,
   nil,   nil,   nil,    20,   nil,   nil,   104,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,
    28,    29,    30,    31,    34,    39,   nil,    42,   nil,   nil,
   nil,    20,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    42,   nil,   nil,   nil,   178,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    42,   nil,   nil,   nil,    20,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   100,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,   nil,    39,    34,    42,
   nil,   107,   nil,   nil,   nil,   nil,   nil,   100,   104,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,   nil,    39,    34,    42,
   nil,   107,   nil,   nil,   nil,   178,   nil,   nil,   104,    10,
   nil,   nil,   nil,   nil,   nil,    20,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,    34,    39,   nil,    42,
   nil,   nil,   nil,   nil,   nil,   nil,    34,    10,   nil,   nil,
   nil,   nil,   nil,   178,   nil,    37,    38,    10,    35,    26,
    28,    29,    30,    31,   nil,    39,   nil,    42,    35,    26,
    28,    29,    30,    31,    34,    39,   nil,    42,   nil,   nil,
   nil,   178,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    42,   nil,   nil,   nil,   178,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    42,   nil,   nil,   nil,   178,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    42,   nil,   nil,   nil,   178,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,    34,    39,   nil,    42,
   nil,   nil,   nil,   178,   nil,   nil,   nil,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,
    28,    29,    30,    31,    34,    39,   nil,    42,   nil,   nil,
   nil,   178,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    42,   nil,   nil,   nil,    20,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    42,   nil,   nil,   nil,   nil,   nil,   100,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,   nil,    39,
    34,    42,   nil,   107,   nil,   nil,   nil,    20,   nil,   nil,
   104,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    42,   nil,   nil,   nil,    20,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,    34,    39,   nil,    42,
   nil,   nil,   nil,    20,   nil,   nil,   nil,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,
    28,    29,    30,    31,    34,    39,   nil,    42,   nil,   nil,
   nil,    20,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    42,   nil,   nil,   nil,    20,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    42,   nil,   nil,   nil,   178,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    42,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,   nil,    39,   nil,    42,
   143,   144,   nil,   145,   146,   147,   nil,   nil,   nil,   nil,
   148,   149,   150,   151,   152,   153 ]

racc_action_check = [
    71,     9,   140,    14,   221,   161,    66,   167,   194,    73,
   168,   194,   195,   194,   194,   221,   194,   194,   194,   194,
   169,    71,   174,   195,    71,    66,    66,   176,     9,    12,
   179,    71,    71,   100,   140,   100,    73,    39,    39,   184,
    71,    71,    14,    71,    71,    71,    71,    71,    71,   147,
    71,   196,    71,   197,   100,   147,   143,   100,   143,   143,
   201,   177,   211,   211,   100,   100,    12,    12,    12,    13,
    13,   202,   208,   100,   100,   209,   100,   100,   100,   100,
   100,   100,   177,   100,   219,   100,   220,   227,   228,   178,
     0,   178,   232,   177,     1,     4,     5,     8,    10,    23,
    26,   177,   177,    28,   177,   177,   177,   177,   177,   177,
   178,   177,    29,   177,    30,    31,    32,     3,    34,    72,
     3,   178,    72,    35,    72,    72,    36,    72,    72,   178,
   178,    42,   178,   178,   178,   178,   178,   178,     3,   178,
    45,   178,    46,    48,    57,   180,    58,   180,    64,     3,
    67,    70,    86,    87,    88,    89,    90,     3,     3,    91,
     3,     3,     3,     3,     3,     3,   180,     3,    95,     3,
    98,    99,   101,    59,   104,   105,    59,   180,   120,   121,
   122,   124,   125,   126,   127,   180,   180,   136,   180,   180,
   180,   180,   180,   180,    59,   180,   138,   180,   139,   141,
   145,    60,   154,   160,   nil,    59,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    59,    59,   nil,    59,    59,    59,    59,
    59,    59,    60,    59,   nil,    59,   nil,   nil,   nil,   200,
   nil,   nil,   nil,    60,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    60,    60,   nil,    60,    60,    60,    60,    60,    60,
   200,    60,   nil,    60,   nil,   nil,   nil,   107,   nil,   nil,
   nil,   200,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   200,
   200,   nil,   200,   200,   200,   200,   200,   200,   107,   200,
   nil,   200,   nil,   nil,   nil,    61,   nil,   nil,   107,   107,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   107,   107,   nil,
   107,   107,   107,   107,   107,   107,    61,   107,   nil,   107,
   nil,   nil,   nil,   nil,   nil,   207,   nil,    61,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    61,    61,   nil,    61,    61,
    61,    61,    61,    61,   nil,    61,   207,    61,   nil,   207,
   nil,   nil,   nil,    62,   nil,   nil,   207,   207,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   207,   207,   nil,   207,   207,
   207,   207,   207,   207,    62,   207,   nil,   207,   nil,   nil,
   nil,    63,   nil,   nil,   nil,    62,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    62,    62,   nil,    62,    62,    62,    62,
    62,    62,    63,    62,   nil,    62,   nil,   nil,   nil,   215,
   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    63,    63,   nil,    63,    63,    63,    63,    63,    63,
   215,    63,   nil,    63,   nil,   nil,   nil,   218,   nil,   nil,
   nil,   215,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   215,
   215,   nil,   215,   215,   215,   215,   215,   215,   218,   215,
   nil,   215,   nil,   nil,   nil,   nil,   nil,   137,   nil,   218,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   218,   218,   nil,
   218,   218,   218,   218,   218,   218,   nil,   218,   137,   218,
   nil,   137,   nil,   nil,   nil,   nil,   nil,   142,   137,   137,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   137,   137,   nil,
   137,   137,   137,   137,   137,   137,   nil,   137,   142,   137,
   nil,   142,   nil,   nil,   nil,   144,   nil,   nil,   142,   142,
   nil,   nil,   nil,   nil,   nil,    15,   nil,   142,   142,   nil,
   142,   142,   142,   142,   142,   142,   144,   142,   nil,   142,
   nil,   nil,   nil,   nil,   nil,   nil,    15,   144,   nil,   nil,
   nil,   nil,   nil,   146,   nil,   144,   144,    15,   144,   144,
   144,   144,   144,   144,   nil,   144,   nil,   144,    15,    15,
    15,    15,    15,    15,   146,    15,   nil,    15,   nil,   nil,
   nil,   148,   nil,   nil,   nil,   146,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   146,   146,   nil,   146,   146,   146,   146,
   146,   146,   148,   146,   nil,   146,   nil,   nil,   nil,   149,
   nil,   nil,   nil,   148,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   148,   148,   nil,   148,   148,   148,   148,   148,   148,
   149,   148,   nil,   148,   nil,   nil,   nil,   150,   nil,   nil,
   nil,   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   149,
   149,   nil,   149,   149,   149,   149,   149,   149,   150,   149,
   nil,   149,   nil,   nil,   nil,   151,   nil,   nil,   nil,   150,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   150,   150,   nil,
   150,   150,   150,   150,   150,   150,   151,   150,   nil,   150,
   nil,   nil,   nil,   152,   nil,   nil,   nil,   151,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   151,   151,   nil,   151,   151,
   151,   151,   151,   151,   152,   151,   nil,   151,   nil,   nil,
   nil,   153,   nil,   nil,   nil,   152,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   152,   152,   nil,   152,   152,   152,   152,
   152,   152,   153,   152,   nil,   152,   nil,   nil,   nil,    47,
   nil,   nil,   nil,   153,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   153,   nil,   153,   153,   153,   153,   153,   153,
    47,   153,   nil,   153,   nil,   nil,   nil,   nil,   nil,   157,
   nil,    47,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    47,
    47,   nil,    47,    47,    47,    47,    47,    47,   nil,    47,
   157,    47,   nil,   157,   nil,   nil,   nil,    20,   nil,   nil,
   157,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   157,
   157,   nil,   157,   157,   157,   157,   157,   157,    20,   157,
   nil,   157,   nil,   nil,   nil,    51,   nil,   nil,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,    20,   nil,
    20,    20,    20,    20,    20,    20,    51,    20,   nil,    20,
   nil,   nil,   nil,    52,   nil,   nil,   nil,    51,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    51,    51,   nil,    51,    51,
    51,    51,    51,    51,    52,    51,   nil,    51,   nil,   nil,
   nil,    53,   nil,   nil,   nil,    52,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    52,    52,   nil,    52,    52,    52,    52,
    52,    52,    53,    52,   nil,    52,   nil,   nil,   nil,    54,
   nil,   nil,   nil,    53,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    53,    53,   nil,    53,    53,    53,    53,    53,    53,
    54,    53,   nil,    53,   nil,   nil,   nil,   175,   nil,   nil,
   nil,    54,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    54,
    54,   nil,    54,    54,    54,    54,    54,    54,   175,    54,
   nil,    54,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   175,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   175,   175,   nil,
   175,   175,   175,   175,   175,   175,   nil,   175,   nil,   175,
   103,   103,   nil,   103,   103,   103,   nil,   nil,   nil,   nil,
   103,   103,   103,   103,   103,   103 ]

racc_action_pointer = [
    86,    94,   nil,   115,    95,    88,   nil,   nil,    91,    -6,
    53,   nil,    24,    27,    -2,   523,   nil,   nil,   nil,   nil,
   805,   nil,   nil,    54,   nil,   nil,    98,   nil,   101,   110,
   112,   113,    65,   nil,    73,   100,    75,   nil,   nil,   -15,
   nil,   nil,    76,   nil,   nil,   122,   108,   747,   109,   nil,
   nil,   833,   861,   889,   917,   nil,   nil,   141,   112,   171,
   199,   283,   341,   369,   125,   nil,   -17,    98,   nil,   nil,
   132,    -2,   113,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   149,   150,   151,   152,
   153,   156,   nil,   nil,   nil,   145,   nil,   nil,   149,   151,
    31,   137,   nil,   974,   172,   147,   nil,   255,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   144,   169,   170,   nil,   168,   169,   170,   150,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   165,   455,   162,   195,
    -1,   196,   485,    29,   513,   198,   551,    23,   579,   607,
   635,   663,   691,   719,   198,   nil,   nil,   777,   nil,   nil,
   169,   -29,   nil,   nil,   nil,   nil,   nil,   -13,   -25,    14,
   nil,   nil,   nil,   nil,    -6,   945,    25,    59,    87,     2,
   143,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     2,   -11,    17,    25,   nil,   nil,
   227,    57,    65,   nil,   nil,   nil,   nil,   313,    70,    69,
   nil,    38,   nil,   nil,   nil,   397,   nil,   nil,   425,    49,
    52,   -19,   nil,   nil,   nil,   nil,   nil,    84,    82,   nil,
   nil,   nil,    58,   nil ]

racc_action_default = [
  -142,  -142,    -1,  -142,  -142,    -4,    -5,    -6,    -8,   -11,
  -136,   -96,   -97,  -100,  -103,  -142,  -105,  -106,  -107,  -108,
  -142,  -110,  -111,  -142,  -114,  -115,  -142,  -117,  -142,  -142,
  -142,  -142,  -123,  -124,  -128,  -142,  -142,  -134,  -135,  -142,
  -139,  -140,  -142,   234,    -3,   -36,  -142,  -142,  -142,   -10,
  -136,  -142,  -142,  -142,  -142,  -104,  -112,  -142,  -142,  -142,
  -142,  -142,  -142,  -142,  -126,  -127,  -142,  -142,  -138,  -141,
   -38,  -142,   -13,   -16,   -17,   -19,   -20,   -69,    -7,    -9,
   -98,   -99,  -101,  -102,  -109,  -113,  -142,  -142,  -142,  -142,
  -142,  -142,  -125,  -129,  -131,  -142,  -133,  -137,   -43,  -142,
  -142,   -37,   -55,  -142,  -142,   -72,   -74,  -142,   -77,   -78,
   -79,   -81,   -82,   -83,   -84,   -85,   -86,   -93,   -94,   -95,
  -142,  -142,  -142,   -24,   -26,   -28,   -29,  -142,   -15,  -116,
  -118,  -119,  -120,  -121,  -122,  -132,   -45,  -142,  -142,  -142,
  -142,   -95,  -142,  -142,  -142,  -142,  -142,  -142,  -142,  -142,
  -142,  -142,  -142,  -142,  -142,   -18,   -68,  -142,   -76,   -21,
  -142,  -142,   -25,   -27,   -30,   -14,   -12,  -142,   -44,   -39,
   -41,   -42,    -2,   -80,   -73,  -142,  -142,  -142,  -142,  -142,
  -142,   -59,   -60,   -65,  -142,   -67,   -87,   -88,   -89,   -90,
   -91,   -92,   -75,   -22,  -142,  -142,  -142,  -142,   -58,   -64,
  -142,  -142,   -63,   -66,   -23,   -31,   -32,  -142,  -142,   -46,
   -48,   -52,   -50,   -51,   -40,  -142,   -57,   -61,  -142,   -33,
  -142,  -142,   -49,   -53,   -54,   -56,   -62,  -142,   -35,   -71,
   -47,   -34,  -142,   -70 ]

racc_goto_table = [
    49,     9,   101,   155,    72,   201,    73,   179,   171,   183,
     7,   186,   187,   188,   189,   190,   191,   181,    57,   170,
   210,    82,    83,    80,    81,     1,   222,   174,   192,   158,
    95,   140,    55,    56,    93,    94,   209,     2,   197,    79,
   199,     5,    44,   226,   155,     9,   230,    45,   198,    85,
    70,    98,   136,   166,    78,   156,   204,    87,    88,    89,
    90,    91,   205,   216,   128,   206,   171,   227,   168,    56,
    56,    56,    56,   228,   169,   155,   nil,   214,   225,   nil,
   159,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   141,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   165,   194,
   193,    73,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   219,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    57,   nil,   202,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   212,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   229,   212,   nil,   nil,   nil,   202,   nil,   nil,   nil,
   nil,   nil,   nil,   233 ]

racc_goto_check = [
     9,     8,    25,     3,    15,    40,    16,    37,    30,    37,
     6,    37,    37,    37,    37,    37,    37,    39,     8,    29,
    32,    53,    53,    51,    51,     1,    34,    44,    45,    46,
    55,    25,    56,    52,    66,    67,    31,     2,    37,     9,
    37,     4,     5,    40,     3,     8,    32,    10,    39,     9,
    11,    12,    13,    14,     6,    18,    22,     8,     8,     8,
     8,     8,    23,    37,     9,    24,    30,    26,    25,    52,
    52,    52,    52,    27,    28,     3,   nil,    29,    37,   nil,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,    15,
    16,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     8,   nil,     8,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     9,     9,   nil,   nil,   nil,     8,   nil,   nil,   nil,
   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,    25,    37,  -101,    38,    37,     7,   nil,    -2,    -9,
    42,     5,   -19,   -46,   -83,   -42,   -40,   nil,   -49,   nil,
   nil,   nil,  -138,  -132,  -129,   -69,  -153,  -147,   -64,  -119,
  -130,  -159,  -175,   nil,  -185,   nil,   nil,  -137,   nil,  -128,
  -175,   nil,   nil,   nil,  -115,  -129,   -78,   nil,   nil,   nil,
   nil,   -28,    18,   -32,   nil,   -36,    17,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -32,   -31,   nil,   nil ]

racc_goto_default = [
   nil,   nil,   139,   102,   nil,   nil,   nil,     8,   119,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    25,    74,   182,    75,
    76,   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   211,   nil,   118,   112,   103,   113,   nil,
   nil,   114,   115,   116,   105,   106,   108,   109,   110,   111,
   117,    11,    12,    13,    14,    15,    16,    17,    19,    21,
    22,    23,    27,    32,    33,    36,   nil,   nil,    40,    41 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 57, :_reduce_none,
  3, 59, :_reduce_2,
  3, 58, :_reduce_3,
  2, 58, :_reduce_4,
  1, 60, :_reduce_5,
  1, 60, :_reduce_6,
  3, 62, :_reduce_7,
  1, 62, :_reduce_none,
  3, 63, :_reduce_9,
  2, 63, :_reduce_10,
  1, 63, :_reduce_none,
  5, 61, :_reduce_12,
  2, 66, :_reduce_13,
  3, 71, :_reduce_14,
  2, 71, :_reduce_15,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 74, :_reduce_none,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  3, 75, :_reduce_21,
  4, 75, :_reduce_22,
  5, 76, :_reduce_23,
  1, 77, :_reduce_24,
  2, 77, :_reduce_25,
  1, 77, :_reduce_26,
  2, 77, :_reduce_27,
  1, 77, :_reduce_28,
  1, 77, :_reduce_29,
  2, 77, :_reduce_30,
  1, 78, :_reduce_none,
  1, 78, :_reduce_none,
  2, 79, :_reduce_33,
  4, 80, :_reduce_34,
  1, 82, :_reduce_none,
  0, 67, :_reduce_none,
  2, 67, :_reduce_37,
  0, 68, :_reduce_none,
  3, 68, :_reduce_39,
  3, 84, :_reduce_40,
  1, 84, :_reduce_none,
  1, 85, :_reduce_none,
  0, 69, :_reduce_none,
  2, 69, :_reduce_44,
  0, 70, :_reduce_none,
  3, 70, :_reduce_46,
  3, 87, :_reduce_47,
  1, 87, :_reduce_none,
  2, 88, :_reduce_49,
  1, 89, :_reduce_none,
  1, 89, :_reduce_51,
  0, 90, :_reduce_52,
  1, 90, :_reduce_53,
  1, 90, :_reduce_54,
  1, 91, :_reduce_none,
  6, 92, :_reduce_56,
  5, 92, :_reduce_57,
  4, 94, :_reduce_58,
  3, 94, :_reduce_59,
  1, 95, :_reduce_none,
  3, 95, :_reduce_61,
  3, 96, :_reduce_62,
  1, 96, :_reduce_none,
  4, 97, :_reduce_64,
  3, 97, :_reduce_65,
  4, 98, :_reduce_66,
  3, 98, :_reduce_67,
  2, 99, :_reduce_68,
  1, 72, :_reduce_69,
  3, 83, :_reduce_70,
  1, 83, :_reduce_none,
  1, 81, :_reduce_none,
  3, 81, :_reduce_73,
  1, 100, :_reduce_none,
  3, 100, :_reduce_75,
  2, 101, :_reduce_76,
  1, 101, :_reduce_none,
  1, 102, :_reduce_none,
  1, 103, :_reduce_none,
  3, 103, :_reduce_80,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  1, 104, :_reduce_none,
  3, 105, :_reduce_87,
  3, 105, :_reduce_88,
  3, 105, :_reduce_89,
  3, 105, :_reduce_90,
  3, 105, :_reduce_91,
  3, 105, :_reduce_92,
  1, 93, :_reduce_none,
  1, 93, :_reduce_none,
  1, 106, :_reduce_none,
  1, 64, :_reduce_none,
  1, 64, :_reduce_none,
  3, 107, :_reduce_98,
  3, 107, :_reduce_99,
  1, 107, :_reduce_none,
  3, 109, :_reduce_101,
  3, 109, :_reduce_102,
  1, 109, :_reduce_none,
  2, 110, :_reduce_104,
  1, 110, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  1, 112, :_reduce_none,
  3, 112, :_reduce_109,
  1, 113, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 86, :_reduce_113,
  1, 86, :_reduce_none,
  1, 117, :_reduce_none,
  4, 114, :_reduce_116,
  1, 114, :_reduce_none,
  4, 118, :_reduce_118,
  4, 118, :_reduce_119,
  4, 118, :_reduce_120,
  4, 118, :_reduce_121,
  4, 118, :_reduce_122,
  1, 116, :_reduce_none,
  1, 116, :_reduce_none,
  3, 119, :_reduce_125,
  2, 119, :_reduce_126,
  2, 119, :_reduce_127,
  1, 119, :_reduce_128,
  3, 120, :_reduce_129,
  1, 121, :_reduce_none,
  1, 122, :_reduce_none,
  2, 123, :_reduce_132,
  1, 123, :_reduce_133,
  1, 111, :_reduce_134,
  1, 111, :_reduce_135,
  1, 65, :_reduce_136,
  3, 108, :_reduce_137,
  2, 108, :_reduce_138,
  1, 108, :_reduce_none,
  1, 124, :_reduce_none,
  2, 125, :_reduce_141 ]

racc_reduce_n = 142

racc_shift_n = 234

racc_token_table = {
  false => 0,
  :error => 1,
  :left_paren => 2,
  :right_paren => 3,
  :SELECT => 4,
  :asterisk => 5,
  :comma => 6,
  :AS => 7,
  :FROM => 8,
  :CROSS => 9,
  :JOIN => 10,
  :INNER => 11,
  :LEFT => 12,
  :OUTER => 13,
  :RIGHT => 14,
  :FULL => 15,
  :ON => 16,
  :USING => 17,
  :WHERE => 18,
  :GROUP => 19,
  :BY => 20,
  :HAVING => 21,
  :ORDER => 22,
  :unsigned_integer => 23,
  :ASC => 24,
  :DESC => 25,
  :NOT => 26,
  :BETWEEN => 27,
  :AND => 28,
  :IN => 29,
  :LIKE => 30,
  :IS => 31,
  :NULL => 32,
  :EXISTS => 33,
  :identifier => 34,
  :OR => 35,
  :equals_operator => 36,
  :not_equals_operator => 37,
  :less_than_operator => 38,
  :greater_than_operator => 39,
  :less_than_or_equals_operator => 40,
  :greater_than_or_equals_operator => 41,
  :plus_sign => 42,
  :minus_sign => 43,
  :solidus => 44,
  :period => 45,
  :COUNT => 46,
  :AVG => 47,
  :MAX => 48,
  :MIN => 49,
  :SUM => 50,
  :E => 51,
  :quote => 52,
  :character_string_literal => 53,
  :DATE => 54,
  :date_string => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "comma",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "$start",
  "statement",
  "select_statement",
  "subquery",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_23(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_40(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_47(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_49(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::InValueList.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_70(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_80(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_104(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_109(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 252)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_132(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

module_eval(<<'.,.,', 'parser.racc', 283)
  def _reduce_141(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
