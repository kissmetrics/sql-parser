#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 296)

def self.parse(sql)
  new.scan_str(sql)
rescue Racc::ParseError => err
  raise err.to_s.strip
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   105,   178,    53,    58,   132,   101,   148,   149,   189,   150,
   151,   152,    73,    72,   190,   218,   153,   154,   155,   156,
   157,   158,    35,  -113,    38,    39,    55,   218,   200,    55,
   147,    55,   109,    11,   147,   105,   201,   180,    55,   181,
   182,    38,    39,    59,    36,    27,    29,    30,    31,    32,
   162,    40,   185,    44,   205,    45,    46,    35,   228,   229,
   112,  -113,  -113,  -113,    56,    57,   125,   109,    11,   126,
   105,   128,   129,   208,   130,   131,    38,    39,    11,    36,
    27,    29,    30,    31,    32,   220,    40,   183,    44,   222,
    45,    46,    35,   223,   225,   112,   226,   147,    55,   236,
   237,     3,   109,    11,    55,     4,    47,    50,    21,    35,
     3,    38,    39,    52,    36,    27,    29,    30,    31,    32,
    11,    40,   -70,    44,    63,    45,    46,    64,    38,    39,
    35,    36,    27,    29,    30,    31,    32,    65,    40,    66,
    44,    11,    45,    46,   105,    67,     3,    68,  -131,    38,
    39,    69,    36,    27,    29,    30,    31,    32,    70,    40,
    71,    44,    74,    45,    46,    21,    35,     3,    76,   112,
    82,    55,    89,    55,    97,   102,   109,    11,   104,   134,
   135,   136,    21,   137,   138,    38,    39,    35,    36,    27,
    29,    30,    31,    32,   139,    40,   140,    44,    11,    45,
    46,    21,   142,   143,    35,   147,    38,    39,   159,    36,
    27,    29,    30,    31,    32,    11,    40,   162,    44,    82,
    45,    46,   183,    35,   165,   166,    36,    27,    29,    30,
    31,    32,   167,    40,    11,    44,   168,    45,    46,   169,
    55,   172,    38,    39,    35,    36,    27,    29,    30,    31,
    32,    11,    40,   177,    44,    11,    45,    46,    21,    89,
   185,    91,     3,    38,    39,    82,    36,    27,    29,    30,
    31,    32,    82,    40,   nil,    44,   125,    45,    46,   126,
    35,   128,   129,   nil,   130,   131,   212,   213,   nil,   nil,
   105,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
   nil,    44,    35,    45,    46,   112,   nil,   nil,    21,   nil,
   nil,   nil,   109,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
    35,    40,   nil,    44,   nil,    45,    46,   nil,    21,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
    35,    44,   nil,    45,    46,   nil,   183,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,    35,    40,
   nil,    44,   nil,    45,    46,   nil,    21,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,   nil,    40,    35,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,    35,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,     6,     7,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,   nil,   nil,   105,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,   nil,    44,    35,    45,    46,   112,
   nil,   nil,   183,   nil,   nil,   nil,   109,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,    35,    44,   nil,    45,    46,   nil,
   183,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,    35,    40,   nil,    44,   nil,    45,    46,   nil,
   183,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,    35,    44,   nil,    45,    46,   nil,   183,   nil,
   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
    35,    40,   nil,    44,   nil,    45,    46,   nil,   183,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,   nil,    40,
    35,    44,   nil,    45,    46,   nil,   183,   nil,   nil,   nil,
   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,
    39,   nil,    36,    27,    29,    30,    31,    32,    35,    40,
   nil,    44,   nil,    45,    46,   nil,   183,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,   nil,    40,    35,    44,
   nil,    45,    46,   nil,   183,   nil,   nil,   nil,   nil,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,   nil,   nil,   105,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,   nil,    44,    35,    45,
    46,   112,   nil,   nil,    21,   nil,   nil,   nil,   109,    11,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,
    36,    27,    29,    30,    31,    32,    35,    40,   nil,    44,
   nil,    45,    46,   nil,    21,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,   nil,    40,    35,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,   nil,   nil,    11,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    39,   nil,    36,    27,
    29,    30,    31,    32,    35,    40,   nil,    44,   nil,    45,
    46,   nil,    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,   nil,    40,    35,    44,   nil,    45,    46,   nil,
   183,   nil,   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    38,    39,   nil,    36,    27,    29,    30,
    31,    32,    35,    40,   nil,    44,   nil,    45,    46,   nil,
    21,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,    35,    44,   nil,    45,    46,   nil,   nil,   nil,
   nil,   nil,   nil,    11,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    38,    39,   nil,    36,    27,    29,    30,    31,    32,
   nil,    40,   nil,    44,   nil,    45,    46 ]

racc_action_check = [
   112,   145,    10,    15,    78,    71,   108,   108,   152,   108,
   108,   108,    40,    40,   152,   226,   108,   108,   108,   108,
   108,   108,   112,    13,    71,    71,   226,   200,   172,    10,
   173,    78,   112,   112,   145,   142,   174,   148,   200,   148,
   148,   112,   112,    15,   112,   112,   112,   112,   112,   112,
   179,   112,   181,   112,   184,   112,   112,   142,   216,   216,
   142,    13,    13,    13,    14,    14,    77,   142,   142,    77,
    76,    77,    77,   189,    77,    77,   142,   142,   201,   142,
   142,   142,   142,   142,   142,   202,   142,   182,   142,   206,
   142,   142,    76,   207,   213,    76,   214,   224,   225,   232,
   233,     0,    76,    76,   237,     1,     4,     5,   183,   182,
   183,    76,    76,     9,    76,    76,    76,    76,    76,    76,
   182,    76,    11,    76,    24,    76,    76,    27,   182,   182,
   183,   182,   182,   182,   182,   182,   182,    29,   182,    30,
   182,   183,   182,   182,   105,    31,   105,    32,    33,   183,
   183,    35,   183,   183,   183,   183,   183,   183,    36,   183,
    37,   183,    44,   183,   183,   185,   105,   185,    49,   105,
    50,    53,    62,    63,    69,    72,   105,   105,    75,    91,
    92,    93,    16,    94,    95,   105,   105,   185,   105,   105,
   105,   105,   105,   105,    96,   105,   100,   105,   185,   105,
   105,    21,   103,   104,    16,   106,   185,   185,   109,   185,
   185,   185,   185,   185,   185,    16,   185,   110,   185,   125,
   185,   185,   205,    21,   126,   127,    16,    16,    16,    16,
    16,    16,   129,    16,    21,    16,   130,    16,    16,   131,
   132,   141,    21,    21,   205,    21,    21,    21,    21,    21,
    21,   143,    21,   144,    21,   205,    21,    21,    64,   146,
   150,    64,   159,   205,   205,   165,   205,   205,   205,   205,
   205,   205,   166,   205,   nil,   205,   199,   205,   205,   199,
    64,   199,   199,   nil,   199,   199,   199,   199,   nil,   nil,
   212,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,
    64,   nil,    64,    64,    64,    64,    64,    64,   nil,    64,
   nil,    64,   212,    64,    64,   212,   nil,   nil,    65,   nil,
   nil,   nil,   212,   212,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   212,   212,   nil,   212,   212,   212,   212,   212,   212,
    65,   212,   nil,   212,   nil,   212,   212,   nil,    66,   nil,
   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    65,
    65,   nil,    65,    65,    65,    65,    65,    65,   nil,    65,
    66,    65,   nil,    65,    65,   nil,   220,   nil,   nil,   nil,
   nil,    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,
    66,   nil,    66,    66,    66,    66,    66,    66,   220,    66,
   nil,    66,   nil,    66,    66,   nil,   223,   nil,   nil,   220,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   220,   220,   nil,
   220,   220,   220,   220,   220,   220,   nil,   220,   223,   220,
   nil,   220,   220,   nil,    67,   nil,   nil,   nil,   nil,   223,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   223,   223,   nil,
   223,   223,   223,   223,   223,   223,    67,   223,   nil,   223,
   nil,   223,   223,   nil,    68,   nil,   nil,    67,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    67,    67,   nil,    67,    67,
    67,    67,    67,    67,   nil,    67,    68,    67,   nil,    67,
    67,   nil,     3,   nil,   nil,     3,     3,    68,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    68,    68,   nil,    68,    68,
    68,    68,    68,    68,     3,    68,   nil,    68,   nil,    68,
    68,   nil,   nil,   nil,   147,     3,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     3,     3,   nil,     3,     3,     3,     3,
     3,     3,   nil,     3,   nil,     3,   147,     3,     3,   147,
   nil,   nil,   149,   nil,   nil,   nil,   147,   147,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   147,   147,   nil,   147,   147,
   147,   147,   147,   147,   149,   147,   nil,   147,   nil,   147,
   147,   nil,     7,   nil,   nil,   149,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   149,   149,   nil,   149,   149,   149,   149,
   149,   149,   nil,   149,     7,   149,   nil,   149,   149,   nil,
   151,   nil,   nil,   nil,   nil,     7,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     7,     7,   nil,     7,     7,     7,     7,
     7,     7,   151,     7,   nil,     7,   nil,     7,     7,   nil,
   153,   nil,   nil,   151,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   151,   151,   nil,   151,   151,   151,   151,   151,   151,
   nil,   151,   153,   151,   nil,   151,   151,   nil,   154,   nil,
   nil,   nil,   nil,   153,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   153,   153,   nil,   153,   153,   153,   153,   153,   153,
   154,   153,   nil,   153,   nil,   153,   153,   nil,   155,   nil,
   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   154,
   154,   nil,   154,   154,   154,   154,   154,   154,   nil,   154,
   155,   154,   nil,   154,   154,   nil,   156,   nil,   nil,   nil,
   nil,   155,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   155,
   155,   nil,   155,   155,   155,   155,   155,   155,   156,   155,
   nil,   155,   nil,   155,   155,   nil,   157,   nil,   nil,   156,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   156,   156,   nil,
   156,   156,   156,   156,   156,   156,   nil,   156,   157,   156,
   nil,   156,   156,   nil,   158,   nil,   nil,   nil,   nil,   157,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   157,   157,   nil,
   157,   157,   157,   157,   157,   157,   158,   157,   nil,   157,
   nil,   157,   157,   nil,   nil,   nil,   162,   158,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   158,   158,   nil,   158,   158,
   158,   158,   158,   158,   nil,   158,   nil,   158,   162,   158,
   158,   162,   nil,   nil,    52,   nil,   nil,   nil,   162,   162,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   162,   162,   nil,
   162,   162,   162,   162,   162,   162,    52,   162,   nil,   162,
   nil,   162,   162,   nil,    56,   nil,   nil,    52,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    52,    52,   nil,    52,    52,
    52,    52,    52,    52,   nil,    52,    56,    52,   nil,    52,
    52,   nil,    57,   nil,   nil,   nil,   nil,    56,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    56,    56,   nil,    56,    56,
    56,    56,    56,    56,    57,    56,   nil,    56,   nil,    56,
    56,   nil,    58,   nil,   nil,    57,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,    57,   nil,    57,    57,    57,    57,
    57,    57,   nil,    57,    58,    57,   nil,    57,    57,   nil,
   180,   nil,   nil,   nil,   nil,    58,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    58,    58,   nil,    58,    58,    58,    58,
    58,    58,   180,    58,   nil,    58,   nil,    58,    58,   nil,
    59,   nil,   nil,   180,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   180,   180,   nil,   180,   180,   180,   180,   180,   180,
   nil,   180,    59,   180,   nil,   180,   180,   nil,   nil,   nil,
   nil,   nil,   nil,    59,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    59,    59,   nil,    59,    59,    59,    59,    59,    59,
   nil,    59,   nil,    59,   nil,    59,    59 ]

racc_action_pointer = [
    97,   105,   nil,   490,   106,    98,   nil,   580,   nil,   106,
    -6,    76,   nil,    18,    21,    -2,   180,   nil,   nil,   nil,
   nil,   199,   nil,   nil,    78,   nil,   nil,   125,   nil,   135,
   137,   143,   145,    96,   nil,   105,   134,   108,   nil,   nil,
   -41,   nil,   nil,   nil,   106,   nil,   nil,   nil,   nil,   149,
   135,   nil,   842,   136,   nil,   nil,   872,   900,   930,   988,
   nil,   nil,   169,   138,   256,   316,   346,   432,   462,   150,
   nil,   -19,   122,   nil,   nil,   158,    68,    59,    -4,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   176,   177,   178,   180,   181,   191,   nil,   nil,   nil,
   172,   nil,   nil,   180,   182,   142,   169,   nil,   -21,   206,
   188,   nil,    -2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   184,   213,   214,   nil,   218,
   222,   225,   205,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   218,    33,   216,   250,    -2,   256,   522,     9,   550,
   258,   608,   -19,   638,   666,   696,   724,   754,   782,   258,
   nil,   nil,   814,   nil,   nil,   230,   237,   nil,   nil,   nil,
   nil,   nil,     7,    -6,    29,   nil,   nil,   nil,   nil,    21,
   958,    50,    85,   106,    25,   163,   nil,   nil,   nil,    40,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   269,
     3,    43,    56,   nil,   nil,   220,    86,    86,   nil,   nil,
   nil,   nil,   288,    92,    89,   nil,    33,   nil,   nil,   nil,
   374,   nil,   nil,   404,    61,    63,    -9,   nil,   nil,   nil,
   nil,   nil,    96,    93,   nil,   nil,   nil,    69,   nil ]

racc_action_default = [
  -146,  -146,    -1,  -146,  -146,    -4,    -5,  -146,    -7,    -9,
   -12,  -137,   -97,   -98,  -101,  -104,  -146,  -106,  -107,  -108,
  -109,  -146,  -111,  -112,  -146,  -115,  -116,  -146,  -118,  -146,
  -146,  -146,  -146,  -124,  -125,  -129,  -146,  -146,  -135,  -136,
  -146,  -140,  -141,  -142,  -146,  -144,  -145,   239,    -3,   -37,
  -146,    -6,  -146,  -146,   -11,  -137,  -146,  -146,  -146,  -146,
  -105,  -113,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -127,
  -128,  -146,  -146,  -139,  -143,   -39,  -146,   -14,   -17,   -18,
   -20,   -21,   -70,    -8,   -10,   -99,  -100,  -102,  -103,  -110,
  -114,  -146,  -146,  -146,  -146,  -146,  -146,  -126,  -130,  -132,
  -146,  -134,  -138,   -44,  -146,  -146,   -38,   -56,  -146,  -146,
   -73,   -75,  -146,   -78,   -79,   -80,   -82,   -83,   -84,   -85,
   -86,   -87,   -94,   -95,   -96,  -146,  -146,  -146,   -25,   -27,
   -29,   -30,  -146,   -16,  -117,  -119,  -120,  -121,  -122,  -123,
  -133,   -46,  -146,  -146,  -146,  -146,   -96,  -146,  -146,  -146,
  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,  -146,
   -19,   -69,  -146,   -77,   -22,  -146,  -146,   -26,   -28,   -31,
   -15,   -13,  -146,   -45,   -40,   -42,   -43,    -2,   -81,   -74,
  -146,  -146,  -146,  -146,  -146,  -146,   -60,   -61,   -66,  -146,
   -68,   -88,   -89,   -90,   -91,   -92,   -93,   -76,   -23,  -146,
  -146,  -146,  -146,   -59,   -65,  -146,  -146,   -64,   -67,   -24,
   -32,   -33,  -146,  -146,   -47,   -49,   -53,   -51,   -52,   -41,
  -146,   -58,   -62,  -146,   -34,  -146,  -146,   -50,   -54,   -55,
   -57,   -63,  -146,   -36,   -72,   -48,   -35,  -146,   -71 ]

racc_goto_table = [
    54,    10,    77,   106,    78,    10,   160,     8,   206,   176,
   186,    51,   175,   215,    87,    88,     1,    61,   184,    62,
   188,   227,   191,   192,   193,   194,   195,   196,    85,    86,
   179,   197,   145,   163,   100,    60,    98,    99,   214,   235,
     2,   203,     5,    84,    48,    49,   231,   160,    75,   202,
    10,   204,   103,    90,   141,   171,    83,    61,    61,    61,
    61,   161,    92,    93,    94,    95,    96,   176,   133,   173,
   219,   209,   210,   211,   221,   232,   233,   174,   160,   164,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   230,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   146,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   199,   198,
    78,   nil,   170,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   224,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    62,   nil,   207,   nil,   nil,   nil,   nil,   nil,   nil,
   217,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   234,   217,   nil,   nil,   nil,
   nil,   207,   nil,   nil,   nil,   nil,   nil,   238 ]

racc_goto_check = [
     9,     8,    15,    25,    16,     8,     3,     6,    40,    30,
    39,     6,    29,    32,    53,    53,     1,    52,    37,     8,
    37,    34,    37,    37,    37,    37,    37,    37,    51,    51,
    44,    45,    25,    46,    55,    56,    66,    67,    31,    32,
     2,    39,     4,     9,     5,    10,    40,     3,    11,    37,
     8,    37,    12,     9,    13,    14,     6,    52,    52,    52,
    52,    18,     8,     8,     8,     8,     8,    30,     9,    25,
    29,    22,    23,    24,    37,    26,    27,    28,     3,    16,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    15,    16,
    16,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    25,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,
     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     9,     9,   nil,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,    16,    40,  -103,    39,    39,     4,   nil,    -2,   -10,
    40,    -1,   -23,   -49,   -86,   -48,   -46,   nil,   -48,   nil,
   nil,   nil,  -128,  -127,  -126,   -73,  -150,  -149,   -66,  -131,
  -134,  -162,  -187,   nil,  -195,   nil,   nil,  -131,   nil,  -140,
  -177,   nil,   nil,   nil,  -117,  -131,   -79,   nil,   nil,   nil,
   nil,   -28,     1,   -44,   nil,   -37,    19,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -35,   -34,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   144,   107,   nil,   nil,   nil,     9,   124,    25,
   nil,   nil,   nil,   nil,   nil,   nil,    26,    79,   187,    80,
    81,   127,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   216,   nil,   123,   117,   108,   118,   nil,
   nil,   119,   120,   121,   110,   111,   113,   114,   115,   116,
   122,    12,    13,    14,    15,    16,    17,    18,    20,    22,
    23,    24,    28,    33,    34,    37,   nil,   nil,    41,    42,
    43 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 60, :_reduce_none,
  3, 62, :_reduce_2,
  3, 61, :_reduce_3,
  2, 61, :_reduce_4,
  1, 63, :_reduce_5,
  2, 63, :_reduce_6,
  1, 63, :_reduce_7,
  3, 65, :_reduce_8,
  1, 65, :_reduce_none,
  3, 66, :_reduce_10,
  2, 66, :_reduce_11,
  1, 66, :_reduce_none,
  5, 64, :_reduce_13,
  2, 69, :_reduce_14,
  3, 74, :_reduce_15,
  2, 74, :_reduce_16,
  1, 74, :_reduce_none,
  1, 74, :_reduce_none,
  1, 77, :_reduce_none,
  1, 76, :_reduce_none,
  1, 76, :_reduce_none,
  3, 78, :_reduce_22,
  4, 78, :_reduce_23,
  5, 79, :_reduce_24,
  1, 80, :_reduce_25,
  2, 80, :_reduce_26,
  1, 80, :_reduce_27,
  2, 80, :_reduce_28,
  1, 80, :_reduce_29,
  1, 80, :_reduce_30,
  2, 80, :_reduce_31,
  1, 81, :_reduce_none,
  1, 81, :_reduce_none,
  2, 82, :_reduce_34,
  4, 83, :_reduce_35,
  1, 85, :_reduce_none,
  0, 70, :_reduce_none,
  2, 70, :_reduce_38,
  0, 71, :_reduce_none,
  3, 71, :_reduce_40,
  3, 87, :_reduce_41,
  1, 87, :_reduce_none,
  1, 88, :_reduce_none,
  0, 72, :_reduce_none,
  2, 72, :_reduce_45,
  0, 73, :_reduce_none,
  3, 73, :_reduce_47,
  3, 90, :_reduce_48,
  1, 90, :_reduce_none,
  2, 91, :_reduce_50,
  1, 92, :_reduce_none,
  1, 92, :_reduce_52,
  0, 93, :_reduce_53,
  1, 93, :_reduce_54,
  1, 93, :_reduce_55,
  1, 94, :_reduce_none,
  6, 95, :_reduce_57,
  5, 95, :_reduce_58,
  4, 97, :_reduce_59,
  3, 97, :_reduce_60,
  1, 98, :_reduce_none,
  3, 98, :_reduce_62,
  3, 99, :_reduce_63,
  1, 99, :_reduce_none,
  4, 100, :_reduce_65,
  3, 100, :_reduce_66,
  4, 101, :_reduce_67,
  3, 101, :_reduce_68,
  2, 102, :_reduce_69,
  1, 75, :_reduce_70,
  3, 86, :_reduce_71,
  1, 86, :_reduce_none,
  1, 84, :_reduce_none,
  3, 84, :_reduce_74,
  1, 103, :_reduce_none,
  3, 103, :_reduce_76,
  2, 104, :_reduce_77,
  1, 104, :_reduce_none,
  1, 105, :_reduce_none,
  1, 106, :_reduce_none,
  3, 106, :_reduce_81,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  1, 107, :_reduce_none,
  3, 108, :_reduce_88,
  3, 108, :_reduce_89,
  3, 108, :_reduce_90,
  3, 108, :_reduce_91,
  3, 108, :_reduce_92,
  3, 108, :_reduce_93,
  1, 96, :_reduce_none,
  1, 96, :_reduce_none,
  1, 109, :_reduce_none,
  1, 67, :_reduce_none,
  1, 67, :_reduce_none,
  3, 110, :_reduce_99,
  3, 110, :_reduce_100,
  1, 110, :_reduce_none,
  3, 112, :_reduce_102,
  3, 112, :_reduce_103,
  1, 112, :_reduce_none,
  2, 113, :_reduce_105,
  1, 113, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  1, 115, :_reduce_none,
  3, 115, :_reduce_110,
  1, 116, :_reduce_none,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  3, 89, :_reduce_114,
  1, 89, :_reduce_none,
  1, 120, :_reduce_none,
  4, 117, :_reduce_117,
  1, 117, :_reduce_none,
  4, 121, :_reduce_119,
  4, 121, :_reduce_120,
  4, 121, :_reduce_121,
  4, 121, :_reduce_122,
  4, 121, :_reduce_123,
  1, 119, :_reduce_none,
  1, 119, :_reduce_none,
  3, 122, :_reduce_126,
  2, 122, :_reduce_127,
  2, 122, :_reduce_128,
  1, 122, :_reduce_129,
  3, 123, :_reduce_130,
  1, 124, :_reduce_none,
  1, 125, :_reduce_none,
  2, 126, :_reduce_133,
  1, 126, :_reduce_134,
  1, 114, :_reduce_135,
  1, 114, :_reduce_136,
  1, 68, :_reduce_137,
  3, 111, :_reduce_138,
  2, 111, :_reduce_139,
  1, 111, :_reduce_none,
  1, 111, :_reduce_none,
  1, 127, :_reduce_none,
  2, 129, :_reduce_143,
  1, 128, :_reduce_144,
  1, 128, :_reduce_145 ]

racc_reduce_n = 146

racc_shift_n = 239

racc_token_table = {
  false => 0,
  :error => 1,
  :left_paren => 2,
  :right_paren => 3,
  :SELECT => 4,
  :asterisk => 5,
  :DISTINCT => 6,
  :comma => 7,
  :AS => 8,
  :FROM => 9,
  :CROSS => 10,
  :JOIN => 11,
  :INNER => 12,
  :LEFT => 13,
  :OUTER => 14,
  :RIGHT => 15,
  :FULL => 16,
  :ON => 17,
  :USING => 18,
  :WHERE => 19,
  :GROUP => 20,
  :BY => 21,
  :HAVING => 22,
  :ORDER => 23,
  :unsigned_integer => 24,
  :ASC => 25,
  :DESC => 26,
  :NOT => 27,
  :BETWEEN => 28,
  :AND => 29,
  :IN => 30,
  :LIKE => 31,
  :IS => 32,
  :NULL => 33,
  :EXISTS => 34,
  :identifier => 35,
  :OR => 36,
  :equals_operator => 37,
  :not_equals_operator => 38,
  :less_than_operator => 39,
  :greater_than_operator => 40,
  :less_than_or_equals_operator => 41,
  :greater_than_or_equals_operator => 42,
  :plus_sign => 43,
  :minus_sign => 44,
  :solidus => 45,
  :period => 46,
  :COUNT => 47,
  :AVG => 48,
  :MAX => 49,
  :MIN => 50,
  :SUM => 51,
  :E => 52,
  :quote => 53,
  :character_string_literal => 54,
  :DATE => 55,
  :date_string => 56,
  :TRUE => 57,
  :FALSE => 58 }

racc_nt_base = 59

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "DISTINCT",
  "comma",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "TRUE",
  "FALSE",
  "$start",
  "statement",
  "select_statement",
  "subquery",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "boolean_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[1], true) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 16)
  def _reduce_7(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 19)
  def _reduce_8(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 9 omitted

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 24)
  def _reduce_11(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 12 omitted

module_eval(<<'.,.,', 'parser.racc', 28)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 31)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 35)
  def _reduce_16(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 48)
  def _reduce_23(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 51)
  def _reduce_24(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 60)
  def _reduce_31(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 32 omitted

# reduce 33 omitted

module_eval(<<'.,.,', 'parser.racc', 67)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 70)
  def _reduce_35(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 36 omitted

# reduce 37 omitted

module_eval(<<'.,.,', 'parser.racc', 77)
  def _reduce_38(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 39 omitted

module_eval(<<'.,.,', 'parser.racc', 81)
  def _reduce_40(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 84)
  def _reduce_41(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

module_eval(<<'.,.,', 'parser.racc', 92)
  def _reduce_45(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.racc', 96)
  def _reduce_47(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 99)
  def _reduce_48(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.racc', 103)
  def _reduce_50(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 51 omitted

module_eval(<<'.,.,', 'parser.racc', 107)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 112)
  def _reduce_55(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 56 omitted

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 119)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 123)
  def _reduce_60(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 61 omitted

module_eval(<<'.,.,', 'parser.racc', 127)
  def _reduce_62(val, _values, result)
     result = SQLParser::Statement::InValueList.new(Array(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 130)
  def _reduce_63(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 64 omitted

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 138)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 142)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 145)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 148)
  def _reduce_70(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 151)
  def _reduce_71(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.racc', 156)
  def _reduce_74(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.racc', 160)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 163)
  def _reduce_77(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.racc', 171)
  def _reduce_81(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 187)
  def _reduce_93(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

# reduce 98 omitted

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 202)
  def _reduce_100(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 101 omitted

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 207)
  def _reduce_103(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 104 omitted

module_eval(<<'.,.,', 'parser.racc', 211)
  def _reduce_105(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

# reduce 109 omitted

module_eval(<<'.,.,', 'parser.racc', 218)
  def _reduce_110(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 111 omitted

# reduce 112 omitted

# reduce 113 omitted

module_eval(<<'.,.,', 'parser.racc', 228)
  def _reduce_114(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 115 omitted

# reduce 116 omitted

module_eval(<<'.,.,', 'parser.racc', 235)
  def _reduce_117(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 118 omitted

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 243)
  def _reduce_123(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 124 omitted

# reduce 125 omitted

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 252)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 253)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 256)
  def _reduce_130(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 131 omitted

# reduce 132 omitted

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_133(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 266)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 270)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 273)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 277)
  def _reduce_139(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 140 omitted

# reduce 141 omitted

# reduce 142 omitted

module_eval(<<'.,.,', 'parser.racc', 285)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::True.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 289)
  def _reduce_145(val, _values, result)
     result = SQLParser::Statement::False.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
