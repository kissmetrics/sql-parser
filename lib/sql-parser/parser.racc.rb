#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'

require File.dirname(__FILE__) + '/parser.rex.rb'

module SQLParser
  class Parser < Racc::Parser

module_eval(<<'...end parser.racc/module_eval...', 'parser.racc', 295)

def self.parse(sql)
  new.scan_str(sql)
rescue Racc::ParseError => err
  raise err.to_s.strip
end
...end parser.racc/module_eval...
##### State transition tables begin ###

racc_action_table = [
   103,   176,    51,    56,   216,    80,    99,   130,   123,   216,
   198,   124,   145,   126,   127,    53,   128,   129,   210,   211,
    53,    34,   187,  -112,   110,    37,    38,   199,   188,    53,
   160,   107,    10,   145,    53,   103,   178,     3,   179,   180,
    37,    38,    57,    35,    26,    28,    29,    30,    31,   183,
    39,   203,    43,   206,    44,    45,    34,    71,    70,   110,
  -112,  -112,  -112,   181,    10,   123,   107,    10,   124,   218,
   126,   127,   220,   128,   129,    37,    38,   221,    35,    26,
    28,    29,    30,    31,    34,    39,   223,    43,   224,    44,
    45,    20,   145,     3,    53,    10,   226,   227,    54,    55,
   234,   235,     3,    37,    38,    53,    35,    26,    28,    29,
    30,    31,    34,    39,     4,    43,    46,    44,    45,    20,
    49,    50,     6,    10,   -69,    61,    62,    63,    64,    65,
    66,    37,    38,  -130,    35,    26,    28,    29,    30,    31,
    34,    39,    67,    43,    68,    44,    45,    20,    69,     3,
    72,    10,    74,    80,    53,    87,    53,    95,   100,    37,
    38,   102,    35,    26,    28,    29,    30,    31,    34,    39,
   132,    43,   133,    44,    45,    20,   134,   135,    89,    10,
   136,   137,   138,   140,   141,   145,   157,    37,    38,   160,
    35,    26,    28,    29,    30,    31,    34,    39,    80,    43,
   163,    44,    45,    20,   164,   165,   166,    10,   167,    53,
   170,    10,   175,    87,   183,    37,    38,     3,    35,    26,
    28,    29,    30,    31,    34,    39,    80,    43,   nil,    44,
    45,   181,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    43,   nil,    44,    45,   103,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    43,   nil,    44,    45,    20,   nil,   nil,
   107,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    43,   nil,    44,    45,   nil,   nil,   nil,   nil,    10,
   nil,   nil,   103,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,   nil,    39,   nil,    43,
   nil,    44,    45,    34,   nil,   nil,   110,   nil,   nil,   nil,
    20,   nil,   nil,   107,    10,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,    30,
    31,    34,    39,   nil,    43,   nil,    44,    45,    20,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    37,    38,   nil,    35,    26,    28,    29,    30,    31,    34,
    39,   nil,    43,   nil,    44,    45,   181,   nil,   nil,   nil,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,
   nil,    35,    26,    28,    29,    30,    31,    34,    39,   nil,
    43,   nil,    44,    45,    20,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,
    26,    28,    29,    30,    31,    34,    39,   nil,    43,   nil,
    44,    45,   nil,   nil,   nil,   nil,    10,   nil,   nil,   103,
   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,
    29,    30,    31,   nil,    39,   nil,    43,   nil,    44,    45,
    34,   nil,   nil,   110,   nil,   nil,   nil,   nil,   nil,   nil,
   107,    10,   nil,   nil,   103,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,   nil,    39,
   nil,    43,   nil,    44,    45,    34,   nil,   nil,   110,   nil,
   nil,   nil,   181,   nil,   nil,   107,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,
    29,    30,    31,    34,    39,   nil,    43,   nil,    44,    45,
    20,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,    30,
    31,    34,    39,   nil,    43,   nil,    44,    45,   181,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    35,    26,    28,    29,    30,    31,    34,
    39,   nil,    43,   nil,    44,    45,   181,   nil,   nil,   nil,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,
   nil,    35,    26,    28,    29,    30,    31,    34,    39,   nil,
    43,   nil,    44,    45,   181,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,
    26,    28,    29,    30,    31,    34,    39,   nil,    43,   nil,
    44,    45,   181,   nil,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,
    29,    30,    31,    34,    39,   nil,    43,   nil,    44,    45,
   181,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,    30,
    31,    34,    39,   nil,    43,   nil,    44,    45,   181,   nil,
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    37,    38,   nil,    35,    26,    28,    29,    30,    31,    34,
    39,   nil,    43,   nil,    44,    45,   181,   nil,   nil,   nil,
    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,
   nil,    35,    26,    28,    29,    30,    31,    34,    39,   nil,
    43,   nil,    44,    45,    20,   nil,   nil,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,
    26,    28,    29,    30,    31,    34,    39,   nil,    43,   nil,
    44,    45,   nil,   nil,   nil,   nil,    10,   nil,   nil,   103,
   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,
    29,    30,    31,   nil,    39,   nil,    43,   nil,    44,    45,
    34,   nil,   nil,   110,   nil,   nil,   nil,    20,   nil,   nil,
   107,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    43,   nil,    44,    45,    20,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,    34,    39,   nil,    43,
   nil,    44,    45,    20,   nil,   nil,   nil,    10,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,    35,    26,
    28,    29,    30,    31,    34,    39,   nil,    43,   nil,    44,
    45,    20,   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    37,    38,   nil,    35,    26,    28,    29,
    30,    31,    34,    39,   nil,    43,   nil,    44,    45,    20,
   nil,   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    37,    38,   nil,    35,    26,    28,    29,    30,    31,
    34,    39,   nil,    43,   nil,    44,    45,   181,   nil,   nil,
   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
    38,   nil,    35,    26,    28,    29,    30,    31,    34,    39,
   nil,    43,   nil,    44,    45,   nil,   nil,   nil,   nil,    10,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,    38,   nil,
    35,    26,    28,    29,    30,    31,   nil,    39,   nil,    43,
   nil,    44,    45,   146,   147,   nil,   148,   149,   150,   nil,
   nil,   nil,   nil,   151,   152,   153,   154,   155,   156 ]

racc_action_check = [
    74,   143,     9,    14,   224,   164,    69,    76,   197,   198,
   170,   197,   171,   197,   197,   224,   197,   197,   197,   197,
   198,    74,   150,    12,    74,    69,    69,   172,   150,     9,
   177,    74,    74,   143,    76,   103,   146,   103,   146,   146,
    74,    74,    14,    74,    74,    74,    74,    74,    74,   179,
    74,   182,    74,   187,    74,    74,   103,    39,    39,   103,
    12,    12,    12,   180,   199,    75,   103,   103,    75,   200,
    75,    75,   204,    75,    75,   103,   103,   205,   103,   103,
   103,   103,   103,   103,   180,   103,   211,   103,   212,   103,
   103,   181,   222,   181,   223,   180,   214,   214,    13,    13,
   230,   231,     0,   180,   180,   235,   180,   180,   180,   180,
   180,   180,   181,   180,     1,   180,     4,   180,   180,     3,
     5,     8,     3,   181,    10,    23,    26,    28,    29,    30,
    31,   181,   181,    32,   181,   181,   181,   181,   181,   181,
     3,   181,    34,   181,    35,   181,   181,   183,    36,   183,
    43,     3,    48,    49,    51,    60,    61,    67,    70,     3,
     3,    73,     3,     3,     3,     3,     3,     3,   183,     3,
    89,     3,    90,     3,     3,    62,    91,    92,    62,   183,
    93,    94,    98,   101,   102,   104,   107,   183,   183,   108,
   183,   183,   183,   183,   183,   183,    62,   183,   123,   183,
   124,   183,   183,    63,   125,   127,   128,    62,   129,   130,
   139,   141,   142,   144,   148,    62,    62,   157,    62,    62,
    62,    62,    62,    62,    63,    62,   163,    62,   nil,    62,
    62,   203,   nil,   nil,   nil,    63,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    63,    63,   nil,    63,    63,    63,    63,
    63,    63,   203,    63,   nil,    63,   nil,    63,    63,   110,
   nil,   nil,   nil,   203,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   203,   203,   nil,   203,   203,   203,   203,   203,   203,
   110,   203,   nil,   203,   nil,   203,   203,    64,   nil,   nil,
   110,   110,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   110,
   110,   nil,   110,   110,   110,   110,   110,   110,    64,   110,
   nil,   110,   nil,   110,   110,   nil,   nil,   nil,   nil,    64,
   nil,   nil,   210,   nil,   nil,   nil,   nil,    64,    64,   nil,
    64,    64,    64,    64,    64,    64,   nil,    64,   nil,    64,
   nil,    64,    64,   210,   nil,   nil,   210,   nil,   nil,   nil,
    65,   nil,   nil,   210,   210,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   210,   210,   nil,   210,   210,   210,   210,   210,
   210,    65,   210,   nil,   210,   nil,   210,   210,    66,   nil,
   nil,   nil,    65,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    65,    65,   nil,    65,    65,    65,    65,    65,    65,    66,
    65,   nil,    65,   nil,    65,    65,   218,   nil,   nil,   nil,
    66,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    66,    66,
   nil,    66,    66,    66,    66,    66,    66,   218,    66,   nil,
    66,   nil,    66,    66,   221,   nil,   nil,   nil,   218,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   218,   218,   nil,   218,
   218,   218,   218,   218,   218,   221,   218,   nil,   218,   nil,
   218,   218,   nil,   nil,   nil,   nil,   221,   nil,   nil,   140,
   nil,   nil,   nil,   nil,   221,   221,   nil,   221,   221,   221,
   221,   221,   221,   nil,   221,   nil,   221,   nil,   221,   221,
   140,   nil,   nil,   140,   nil,   nil,   nil,   nil,   nil,   nil,
   140,   140,   nil,   nil,   145,   nil,   nil,   nil,   nil,   140,
   140,   nil,   140,   140,   140,   140,   140,   140,   nil,   140,
   nil,   140,   nil,   140,   140,   145,   nil,   nil,   145,   nil,
   nil,   nil,   147,   nil,   nil,   145,   145,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   145,   145,   nil,   145,   145,   145,
   145,   145,   145,   147,   145,   nil,   145,   nil,   145,   145,
    15,   nil,   nil,   nil,   147,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   147,   147,   nil,   147,   147,   147,   147,   147,
   147,    15,   147,   nil,   147,   nil,   147,   147,   149,   nil,
   nil,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    15,    15,    15,    15,    15,    15,   149,
    15,   nil,    15,   nil,    15,    15,   151,   nil,   nil,   nil,
   149,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   149,   149,
   nil,   149,   149,   149,   149,   149,   149,   151,   149,   nil,
   149,   nil,   149,   149,   152,   nil,   nil,   nil,   151,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   151,   151,   nil,   151,
   151,   151,   151,   151,   151,   152,   151,   nil,   151,   nil,
   151,   151,   153,   nil,   nil,   nil,   152,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   152,   152,   nil,   152,   152,   152,
   152,   152,   152,   153,   152,   nil,   152,   nil,   152,   152,
   154,   nil,   nil,   nil,   153,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   153,   153,   nil,   153,   153,   153,   153,   153,
   153,   154,   153,   nil,   153,   nil,   153,   153,   155,   nil,
   nil,   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   154,   154,   nil,   154,   154,   154,   154,   154,   154,   155,
   154,   nil,   154,   nil,   154,   154,   156,   nil,   nil,   nil,
   155,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   155,   155,
   nil,   155,   155,   155,   155,   155,   155,   156,   155,   nil,
   155,   nil,   155,   155,    50,   nil,   nil,   nil,   156,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   156,   156,   nil,   156,
   156,   156,   156,   156,   156,    50,   156,   nil,   156,   nil,
   156,   156,   nil,   nil,   nil,   nil,    50,   nil,   nil,   160,
   nil,   nil,   nil,   nil,    50,    50,   nil,    50,    50,    50,
    50,    50,    50,   nil,    50,   nil,    50,   nil,    50,    50,
   160,   nil,   nil,   160,   nil,   nil,   nil,    20,   nil,   nil,
   160,   160,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   160,
   160,   nil,   160,   160,   160,   160,   160,   160,    20,   160,
   nil,   160,   nil,   160,   160,    54,   nil,   nil,   nil,    20,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    20,    20,   nil,
    20,    20,    20,    20,    20,    20,    54,    20,   nil,    20,
   nil,    20,    20,    55,   nil,   nil,   nil,    54,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    54,    54,   nil,    54,    54,
    54,    54,    54,    54,    55,    54,   nil,    54,   nil,    54,
    54,    56,   nil,   nil,   nil,    55,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    55,    55,   nil,    55,    55,    55,    55,
    55,    55,    56,    55,   nil,    55,   nil,    55,    55,    57,
   nil,   nil,   nil,    56,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    56,    56,   nil,    56,    56,    56,    56,    56,    56,
    57,    56,   nil,    56,   nil,    56,    56,   178,   nil,   nil,
   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    57,
    57,   nil,    57,    57,    57,    57,    57,    57,   178,    57,
   nil,    57,   nil,    57,    57,   nil,   nil,   nil,   nil,   178,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   178,   178,   nil,
   178,   178,   178,   178,   178,   178,   nil,   178,   nil,   178,
   nil,   178,   178,   106,   106,   nil,   106,   106,   106,   nil,
   nil,   nil,   nil,   106,   106,   106,   106,   106,   106 ]

racc_action_pointer = [
    98,   114,   nil,   117,   116,   112,   nil,   nil,   115,    -5,
    79,   nil,    18,    56,    -2,   558,   nil,   nil,   nil,   nil,
   845,   nil,   nil,    80,   nil,   nil,   124,   nil,   125,   126,
   127,   128,    82,   nil,    97,   121,    97,   nil,   nil,     5,
   nil,   nil,   nil,    95,   nil,   nil,   nil,   nil,   134,   119,
   782,   120,   nil,   nil,   873,   901,   929,   957,   nil,   nil,
   152,   122,   173,   201,   285,   348,   376,   134,   nil,   -17,
   106,   nil,   nil,   142,    -2,    59,     0,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   167,
   169,   173,   174,   177,   178,   nil,   nil,   nil,   159,   nil,
   nil,   162,   164,    33,   150,   nil,  1017,   184,   161,   nil,
   257,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   164,   190,   194,   nil,   192,   193,   195,
   175,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   188,
   467,   177,   209,    -2,   210,   502,     9,   530,   212,   586,
    -4,   614,   642,   670,   698,   726,   754,   213,   nil,   nil,
   817,   nil,   nil,   192,   -29,   nil,   nil,   nil,   nil,   nil,
   -10,   -23,    21,   nil,   nil,   nil,   nil,     2,   985,    47,
    61,    89,    23,   145,   nil,   nil,   nil,    21,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   -14,    30,
    41,   nil,   nil,   229,    69,    71,   nil,   nil,   nil,   nil,
   320,    84,    82,   nil,    72,   nil,   nil,   nil,   404,   nil,
   nil,   432,    57,    60,   -19,   nil,   nil,   nil,   nil,   nil,
    97,    95,   nil,   nil,   nil,    71,   nil ]

racc_action_default = [
  -145,  -145,    -1,  -145,  -145,    -4,    -5,    -6,    -8,   -11,
  -136,   -96,   -97,  -100,  -103,  -145,  -105,  -106,  -107,  -108,
  -145,  -110,  -111,  -145,  -114,  -115,  -145,  -117,  -145,  -145,
  -145,  -145,  -123,  -124,  -128,  -145,  -145,  -134,  -135,  -145,
  -139,  -140,  -141,  -145,  -143,  -144,   237,    -3,   -36,  -145,
  -145,  -145,   -10,  -136,  -145,  -145,  -145,  -145,  -104,  -112,
  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -126,  -127,  -145,
  -145,  -138,  -142,   -38,  -145,   -13,   -16,   -17,   -19,   -20,
   -69,    -7,    -9,   -98,   -99,  -101,  -102,  -109,  -113,  -145,
  -145,  -145,  -145,  -145,  -145,  -125,  -129,  -131,  -145,  -133,
  -137,   -43,  -145,  -145,   -37,   -55,  -145,  -145,   -72,   -74,
  -145,   -77,   -78,   -79,   -81,   -82,   -83,   -84,   -85,   -86,
   -93,   -94,   -95,  -145,  -145,  -145,   -24,   -26,   -28,   -29,
  -145,   -15,  -116,  -118,  -119,  -120,  -121,  -122,  -132,   -45,
  -145,  -145,  -145,  -145,   -95,  -145,  -145,  -145,  -145,  -145,
  -145,  -145,  -145,  -145,  -145,  -145,  -145,  -145,   -18,   -68,
  -145,   -76,   -21,  -145,  -145,   -25,   -27,   -30,   -14,   -12,
  -145,   -44,   -39,   -41,   -42,    -2,   -80,   -73,  -145,  -145,
  -145,  -145,  -145,  -145,   -59,   -60,   -65,  -145,   -67,   -87,
   -88,   -89,   -90,   -91,   -92,   -75,   -22,  -145,  -145,  -145,
  -145,   -58,   -64,  -145,  -145,   -63,   -66,   -23,   -31,   -32,
  -145,  -145,   -46,   -48,   -52,   -50,   -51,   -40,  -145,   -57,
   -61,  -145,   -33,  -145,  -145,   -49,   -53,   -54,   -56,   -62,
  -145,   -35,   -71,   -47,   -34,  -145,   -70 ]

racc_goto_table = [
    52,     9,   104,    75,   158,    76,     7,   174,   173,   204,
   184,   213,    85,    86,     1,    59,    83,    84,    60,   225,
   177,   195,   161,    98,    58,    96,    97,   212,     2,     5,
    47,   143,    48,    73,   101,   139,   169,   233,   159,   207,
   208,   201,    82,   209,   230,   158,   231,   229,     9,   172,
   nil,   nil,    88,    81,    59,    59,    59,    59,   nil,   nil,
    90,    91,    92,    93,    94,   174,   217,   131,   171,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   158,   nil,   182,   162,
   186,   nil,   189,   190,   191,   192,   193,   194,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   144,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   200,
   nil,   202,   nil,   nil,   nil,   nil,   nil,   nil,   197,   196,
    76,   168,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   219,   nil,   nil,   nil,   222,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   228,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    60,
   nil,   205,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   215,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   232,   215,   nil,   nil,   nil,   205,
   nil,   nil,   nil,   nil,   nil,   nil,   236 ]

racc_goto_check = [
     9,     8,    25,    15,     3,    16,     6,    30,    29,    40,
    39,    32,    53,    53,     1,    52,    51,    51,     8,    34,
    44,    45,    46,    55,    56,    66,    67,    31,     2,     4,
     5,    25,    10,    11,    12,    13,    14,    32,    18,    22,
    23,    39,     9,    24,    26,     3,    27,    40,     8,    28,
   nil,   nil,     9,     6,    52,    52,    52,    52,   nil,   nil,
     8,     8,     8,     8,     8,    30,    29,     9,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     3,   nil,    37,    16,
    37,   nil,    37,    37,    37,    37,    37,    37,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,    37,   nil,   nil,   nil,   nil,   nil,   nil,    15,    16,
    16,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    37,   nil,   nil,   nil,    25,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     8,
   nil,     8,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     9,     9,   nil,   nil,   nil,     8,
   nil,   nil,   nil,   nil,   nil,   nil,     9 ]

racc_goto_pointer = [
   nil,    14,    28,  -103,    26,    25,     3,   nil,    -2,    -9,
    27,   -15,   -39,   -66,  -103,   -46,   -44,   nil,   -69,   nil,
   nil,   nil,  -158,  -157,  -154,   -72,  -179,  -177,   -92,  -133,
  -134,  -171,  -187,   nil,  -195,   nil,   nil,   -69,   nil,  -138,
  -174,   nil,   nil,   nil,  -125,  -139,   -88,   nil,   nil,   nil,
   nil,   -38,     0,   -44,   nil,   -46,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   -44,   -43,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   142,   105,   nil,   nil,   nil,     8,   122,    24,
   nil,   nil,   nil,   nil,   nil,   nil,    25,    77,   185,    78,
    79,   125,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    18,   nil,   nil,   214,   nil,   121,   115,   106,   116,   nil,
   nil,   117,   118,   119,   108,   109,   111,   112,   113,   114,
   120,    11,    12,    13,    14,    15,    16,    17,    19,    21,
    22,    23,    27,    32,    33,    36,   nil,   nil,    40,    41,
    42 ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 59, :_reduce_none,
  3, 61, :_reduce_2,
  3, 60, :_reduce_3,
  2, 60, :_reduce_4,
  1, 62, :_reduce_5,
  1, 62, :_reduce_6,
  3, 64, :_reduce_7,
  1, 64, :_reduce_none,
  3, 65, :_reduce_9,
  2, 65, :_reduce_10,
  1, 65, :_reduce_none,
  5, 63, :_reduce_12,
  2, 68, :_reduce_13,
  3, 73, :_reduce_14,
  2, 73, :_reduce_15,
  1, 73, :_reduce_none,
  1, 73, :_reduce_none,
  1, 76, :_reduce_none,
  1, 75, :_reduce_none,
  1, 75, :_reduce_none,
  3, 77, :_reduce_21,
  4, 77, :_reduce_22,
  5, 78, :_reduce_23,
  1, 79, :_reduce_24,
  2, 79, :_reduce_25,
  1, 79, :_reduce_26,
  2, 79, :_reduce_27,
  1, 79, :_reduce_28,
  1, 79, :_reduce_29,
  2, 79, :_reduce_30,
  1, 80, :_reduce_none,
  1, 80, :_reduce_none,
  2, 81, :_reduce_33,
  4, 82, :_reduce_34,
  1, 84, :_reduce_none,
  0, 69, :_reduce_none,
  2, 69, :_reduce_37,
  0, 70, :_reduce_none,
  3, 70, :_reduce_39,
  3, 86, :_reduce_40,
  1, 86, :_reduce_none,
  1, 87, :_reduce_none,
  0, 71, :_reduce_none,
  2, 71, :_reduce_44,
  0, 72, :_reduce_none,
  3, 72, :_reduce_46,
  3, 89, :_reduce_47,
  1, 89, :_reduce_none,
  2, 90, :_reduce_49,
  1, 91, :_reduce_none,
  1, 91, :_reduce_51,
  0, 92, :_reduce_52,
  1, 92, :_reduce_53,
  1, 92, :_reduce_54,
  1, 93, :_reduce_none,
  6, 94, :_reduce_56,
  5, 94, :_reduce_57,
  4, 96, :_reduce_58,
  3, 96, :_reduce_59,
  1, 97, :_reduce_none,
  3, 97, :_reduce_61,
  3, 98, :_reduce_62,
  1, 98, :_reduce_none,
  4, 99, :_reduce_64,
  3, 99, :_reduce_65,
  4, 100, :_reduce_66,
  3, 100, :_reduce_67,
  2, 101, :_reduce_68,
  1, 74, :_reduce_69,
  3, 85, :_reduce_70,
  1, 85, :_reduce_none,
  1, 83, :_reduce_none,
  3, 83, :_reduce_73,
  1, 102, :_reduce_none,
  3, 102, :_reduce_75,
  2, 103, :_reduce_76,
  1, 103, :_reduce_none,
  1, 104, :_reduce_none,
  1, 105, :_reduce_none,
  3, 105, :_reduce_80,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  1, 106, :_reduce_none,
  3, 107, :_reduce_87,
  3, 107, :_reduce_88,
  3, 107, :_reduce_89,
  3, 107, :_reduce_90,
  3, 107, :_reduce_91,
  3, 107, :_reduce_92,
  1, 95, :_reduce_none,
  1, 95, :_reduce_none,
  1, 108, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  3, 109, :_reduce_98,
  3, 109, :_reduce_99,
  1, 109, :_reduce_none,
  3, 111, :_reduce_101,
  3, 111, :_reduce_102,
  1, 111, :_reduce_none,
  2, 112, :_reduce_104,
  1, 112, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  1, 114, :_reduce_none,
  3, 114, :_reduce_109,
  1, 115, :_reduce_none,
  1, 117, :_reduce_none,
  1, 117, :_reduce_none,
  3, 88, :_reduce_113,
  1, 88, :_reduce_none,
  1, 119, :_reduce_none,
  4, 116, :_reduce_116,
  1, 116, :_reduce_none,
  4, 120, :_reduce_118,
  4, 120, :_reduce_119,
  4, 120, :_reduce_120,
  4, 120, :_reduce_121,
  4, 120, :_reduce_122,
  1, 118, :_reduce_none,
  1, 118, :_reduce_none,
  3, 121, :_reduce_125,
  2, 121, :_reduce_126,
  2, 121, :_reduce_127,
  1, 121, :_reduce_128,
  3, 122, :_reduce_129,
  1, 123, :_reduce_none,
  1, 124, :_reduce_none,
  2, 125, :_reduce_132,
  1, 125, :_reduce_133,
  1, 113, :_reduce_134,
  1, 113, :_reduce_135,
  1, 67, :_reduce_136,
  3, 110, :_reduce_137,
  2, 110, :_reduce_138,
  1, 110, :_reduce_none,
  1, 110, :_reduce_none,
  1, 126, :_reduce_none,
  2, 128, :_reduce_142,
  1, 127, :_reduce_143,
  1, 127, :_reduce_144 ]

racc_reduce_n = 145

racc_shift_n = 237

racc_token_table = {
  false => 0,
  :error => 1,
  :left_paren => 2,
  :right_paren => 3,
  :SELECT => 4,
  :asterisk => 5,
  :comma => 6,
  :AS => 7,
  :FROM => 8,
  :CROSS => 9,
  :JOIN => 10,
  :INNER => 11,
  :LEFT => 12,
  :OUTER => 13,
  :RIGHT => 14,
  :FULL => 15,
  :ON => 16,
  :USING => 17,
  :WHERE => 18,
  :GROUP => 19,
  :BY => 20,
  :HAVING => 21,
  :ORDER => 22,
  :unsigned_integer => 23,
  :ASC => 24,
  :DESC => 25,
  :NOT => 26,
  :BETWEEN => 27,
  :AND => 28,
  :IN => 29,
  :LIKE => 30,
  :IS => 31,
  :NULL => 32,
  :EXISTS => 33,
  :identifier => 34,
  :OR => 35,
  :equals_operator => 36,
  :not_equals_operator => 37,
  :less_than_operator => 38,
  :greater_than_operator => 39,
  :less_than_or_equals_operator => 40,
  :greater_than_or_equals_operator => 41,
  :plus_sign => 42,
  :minus_sign => 43,
  :solidus => 44,
  :period => 45,
  :COUNT => 46,
  :AVG => 47,
  :MAX => 48,
  :MIN => 49,
  :SUM => 50,
  :E => 51,
  :quote => 52,
  :character_string_literal => 53,
  :DATE => 54,
  :date_string => 55,
  :TRUE => 56,
  :FALSE => 57 }

racc_nt_base = 58

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "left_paren",
  "right_paren",
  "SELECT",
  "asterisk",
  "comma",
  "AS",
  "FROM",
  "CROSS",
  "JOIN",
  "INNER",
  "LEFT",
  "OUTER",
  "RIGHT",
  "FULL",
  "ON",
  "USING",
  "WHERE",
  "GROUP",
  "BY",
  "HAVING",
  "ORDER",
  "unsigned_integer",
  "ASC",
  "DESC",
  "NOT",
  "BETWEEN",
  "AND",
  "IN",
  "LIKE",
  "IS",
  "NULL",
  "EXISTS",
  "identifier",
  "OR",
  "equals_operator",
  "not_equals_operator",
  "less_than_operator",
  "greater_than_operator",
  "less_than_or_equals_operator",
  "greater_than_or_equals_operator",
  "plus_sign",
  "minus_sign",
  "solidus",
  "period",
  "COUNT",
  "AVG",
  "MAX",
  "MIN",
  "SUM",
  "E",
  "quote",
  "character_string_literal",
  "DATE",
  "date_string",
  "TRUE",
  "FALSE",
  "$start",
  "statement",
  "select_statement",
  "subquery",
  "select_list",
  "table_expression",
  "select_sublist",
  "derived_column",
  "value_expression",
  "column_name",
  "from_clause",
  "where_clause",
  "group_by_clause",
  "having_clause",
  "order_by_clause",
  "table_reference",
  "table_name",
  "joined_table",
  "table_subquery",
  "cross_join",
  "qualified_join",
  "join_type",
  "join_specification",
  "join_condition",
  "named_columns_join",
  "search_condition",
  "join_column_list",
  "column_name_list",
  "grouping_column_reference_list",
  "grouping_column_reference",
  "column_reference",
  "sort_specification_list",
  "sort_specification",
  "sort_key",
  "ordering_specification",
  "row_subquery",
  "between_predicate",
  "row_value_constructor",
  "in_predicate",
  "in_predicate_value",
  "in_value_list",
  "like_predicate",
  "null_predicate",
  "exists_predicate",
  "boolean_term",
  "boolean_factor",
  "boolean_test",
  "boolean_primary",
  "predicate",
  "comparison_predicate",
  "row_value_constructor_element",
  "numeric_value_expression",
  "general_literal",
  "term",
  "factor",
  "sign",
  "value_expression_primary",
  "unsigned_value_specification",
  "set_function_specification",
  "unsigned_literal",
  "unsigned_numeric_literal",
  "qualifier",
  "general_set_function",
  "exact_numeric_literal",
  "approximate_numeric_literal",
  "mantissa",
  "exponent",
  "signed_integer",
  "datetime_literal",
  "boolean_literal",
  "date_literal" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'parser.racc', 7)
  def _reduce_2(val, _values, result)
     result = SQLParser::Statement::Subquery.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 10)
  def _reduce_3(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 11)
  def _reduce_4(val, _values, result)
     result = SQLParser::Statement::Select.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 14)
  def _reduce_5(val, _values, result)
     result = SQLParser::Statement::All.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 15)
  def _reduce_6(val, _values, result)
     result = SQLParser::Statement::SelectList.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 18)
  def _reduce_7(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 8 omitted

module_eval(<<'.,.,', 'parser.racc', 22)
  def _reduce_9(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 23)
  def _reduce_10(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.racc', 27)
  def _reduce_12(val, _values, result)
     result = SQLParser::Statement::TableExpression.new(val[0], val[1], val[2], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 30)
  def _reduce_13(val, _values, result)
     result = SQLParser::Statement::FromClause.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 33)
  def _reduce_14(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 34)
  def _reduce_15(val, _values, result)
     result = SQLParser::Statement::As.new(val[0], val[1]) 
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

# reduce 18 omitted

# reduce 19 omitted

# reduce 20 omitted

module_eval(<<'.,.,', 'parser.racc', 46)
  def _reduce_21(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 47)
  def _reduce_22(val, _values, result)
     result = SQLParser::Statement::CrossJoin.new(val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 50)
  def _reduce_23(val, _values, result)
     result = val[1].new(val[0], val[3], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 53)
  def _reduce_24(val, _values, result)
     result = SQLParser::Statement::InnerJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 54)
  def _reduce_25(val, _values, result)
     result = SQLParser::Statement::LeftOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 55)
  def _reduce_26(val, _values, result)
     result = SQLParser::Statement::LeftJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 56)
  def _reduce_27(val, _values, result)
     result = SQLParser::Statement::RightOuterJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 57)
  def _reduce_28(val, _values, result)
     result = SQLParser::Statement::RightJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 58)
  def _reduce_29(val, _values, result)
     result = SQLParser::Statement::FullJoin 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 59)
  def _reduce_30(val, _values, result)
     result = SQLParser::Statement::FullOuterJoin 
    result
  end
.,.,

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.racc', 66)
  def _reduce_33(val, _values, result)
     result = SQLParser::Statement::On.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 69)
  def _reduce_34(val, _values, result)
     result = SQLParser::Statement::Using.new(val[2]) 
    result
  end
.,.,

# reduce 35 omitted

# reduce 36 omitted

module_eval(<<'.,.,', 'parser.racc', 76)
  def _reduce_37(val, _values, result)
     result = SQLParser::Statement::WhereClause.new(val[1]) 
    result
  end
.,.,

# reduce 38 omitted

module_eval(<<'.,.,', 'parser.racc', 80)
  def _reduce_39(val, _values, result)
     result = SQLParser::Statement::GroupByClause.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 83)
  def _reduce_40(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.racc', 91)
  def _reduce_44(val, _values, result)
     result = SQLParser::Statement::HavingClause.new(val[1]) 
    result
  end
.,.,

# reduce 45 omitted

module_eval(<<'.,.,', 'parser.racc', 95)
  def _reduce_46(val, _values, result)
     result = SQLParser::Statement::OrderBy.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 98)
  def _reduce_47(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 48 omitted

module_eval(<<'.,.,', 'parser.racc', 102)
  def _reduce_49(val, _values, result)
     result = val[1].new(val[0]) 
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.racc', 106)
  def _reduce_51(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 109)
  def _reduce_52(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 110)
  def _reduce_53(val, _values, result)
     result = SQLParser::Statement::Ascending 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 111)
  def _reduce_54(val, _values, result)
     result = SQLParser::Statement::Descending 
    result
  end
.,.,

# reduce 55 omitted

module_eval(<<'.,.,', 'parser.racc', 117)
  def _reduce_56(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Between.new(val[0], val[3], val[5])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 118)
  def _reduce_57(val, _values, result)
     result = SQLParser::Statement::Between.new(val[0], val[2], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 121)
  def _reduce_58(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::In.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 122)
  def _reduce_59(val, _values, result)
     result = SQLParser::Statement::In.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 60 omitted

module_eval(<<'.,.,', 'parser.racc', 126)
  def _reduce_61(val, _values, result)
     result = SQLParser::Statement::InValueList.new(Array(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 129)
  def _reduce_62(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 63 omitted

module_eval(<<'.,.,', 'parser.racc', 136)
  def _reduce_64(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Like.new(val[0], val[3])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 137)
  def _reduce_65(val, _values, result)
     result = SQLParser::Statement::Like.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 140)
  def _reduce_66(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new)) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 141)
  def _reduce_67(val, _values, result)
     result = SQLParser::Statement::Is.new(val[0], SQLParser::Statement::Null.new) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 144)
  def _reduce_68(val, _values, result)
     result = SQLParser::Statement::Exists.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 147)
  def _reduce_69(val, _values, result)
     result = SQLParser::Statement::Table.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 150)
  def _reduce_70(val, _values, result)
     result = Array(val[0]) + Array(val[2]) 
    result
  end
.,.,

# reduce 71 omitted

# reduce 72 omitted

module_eval(<<'.,.,', 'parser.racc', 155)
  def _reduce_73(val, _values, result)
     result = SQLParser::Statement::Or.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.racc', 159)
  def _reduce_75(val, _values, result)
     result = SQLParser::Statement::And.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 162)
  def _reduce_76(val, _values, result)
     result = SQLParser::Statement::Not.new(val[1]) 
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.racc', 170)
  def _reduce_80(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 81 omitted

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.racc', 181)
  def _reduce_87(val, _values, result)
     result = SQLParser::Statement::Equals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 182)
  def _reduce_88(val, _values, result)
     result = SQLParser::Statement::Not.new(SQLParser::Statement::Equals.new(val[0], val[2])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 183)
  def _reduce_89(val, _values, result)
     result = SQLParser::Statement::Less.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 184)
  def _reduce_90(val, _values, result)
     result = SQLParser::Statement::Greater.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 185)
  def _reduce_91(val, _values, result)
     result = SQLParser::Statement::LessOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 186)
  def _reduce_92(val, _values, result)
     result = SQLParser::Statement::GreaterOrEquals.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

# reduce 96 omitted

# reduce 97 omitted

module_eval(<<'.,.,', 'parser.racc', 200)
  def _reduce_98(val, _values, result)
     result = SQLParser::Statement::Add.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 201)
  def _reduce_99(val, _values, result)
     result = SQLParser::Statement::Subtract.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 100 omitted

module_eval(<<'.,.,', 'parser.racc', 205)
  def _reduce_101(val, _values, result)
     result = SQLParser::Statement::Multiply.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 206)
  def _reduce_102(val, _values, result)
     result = SQLParser::Statement::Divide.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 103 omitted

module_eval(<<'.,.,', 'parser.racc', 210)
  def _reduce_104(val, _values, result)
     result = val[0].new(val[1]) 
    result
  end
.,.,

# reduce 105 omitted

# reduce 106 omitted

# reduce 107 omitted

# reduce 108 omitted

module_eval(<<'.,.,', 'parser.racc', 217)
  def _reduce_109(val, _values, result)
     result = val[1] 
    result
  end
.,.,

# reduce 110 omitted

# reduce 111 omitted

# reduce 112 omitted

module_eval(<<'.,.,', 'parser.racc', 227)
  def _reduce_113(val, _values, result)
     result = SQLParser::Statement::QualifiedColumn.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 114 omitted

# reduce 115 omitted

module_eval(<<'.,.,', 'parser.racc', 234)
  def _reduce_116(val, _values, result)
     result = SQLParser::Statement::Count.new(SQLParser::Statement::All.new) 
    result
  end
.,.,

# reduce 117 omitted

module_eval(<<'.,.,', 'parser.racc', 238)
  def _reduce_118(val, _values, result)
     result = SQLParser::Statement::Count.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 239)
  def _reduce_119(val, _values, result)
     result = SQLParser::Statement::Average.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 240)
  def _reduce_120(val, _values, result)
     result = SQLParser::Statement::Maximum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 241)
  def _reduce_121(val, _values, result)
     result = SQLParser::Statement::Minimum.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 242)
  def _reduce_122(val, _values, result)
     result = SQLParser::Statement::Sum.new(val[2]) 
    result
  end
.,.,

# reduce 123 omitted

# reduce 124 omitted

module_eval(<<'.,.,', 'parser.racc', 249)
  def _reduce_125(val, _values, result)
     result = SQLParser::Statement::Float.new("#{val[0]}.#{val[2]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 250)
  def _reduce_126(val, _values, result)
     result = SQLParser::Statement::Float.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 251)
  def _reduce_127(val, _values, result)
     result = SQLParser::Statement::Float.new("0.#{val[1]}".to_f) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 252)
  def _reduce_128(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 255)
  def _reduce_129(val, _values, result)
     result = SQLParser::Statement::ApproximateFloat.new(val[0], val[2]) 
    result
  end
.,.,

# reduce 130 omitted

# reduce 131 omitted

module_eval(<<'.,.,', 'parser.racc', 264)
  def _reduce_132(val, _values, result)
     result = val[0].new(SQLParser::Statement::Integer.new(val[1])) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 265)
  def _reduce_133(val, _values, result)
     result = SQLParser::Statement::Integer.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 268)
  def _reduce_134(val, _values, result)
     result = SQLParser::Statement::UnaryPlus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 269)
  def _reduce_135(val, _values, result)
     result = SQLParser::Statement::UnaryMinus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 272)
  def _reduce_136(val, _values, result)
     result = SQLParser::Statement::Column.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 275)
  def _reduce_137(val, _values, result)
     result = SQLParser::Statement::String.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 276)
  def _reduce_138(val, _values, result)
     result = SQLParser::Statement::String.new('') 
    result
  end
.,.,

# reduce 139 omitted

# reduce 140 omitted

# reduce 141 omitted

module_eval(<<'.,.,', 'parser.racc', 284)
  def _reduce_142(val, _values, result)
     result = SQLParser::Statement::Date.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 287)
  def _reduce_143(val, _values, result)
     result = SQLParser::Statement::True.new 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.racc', 288)
  def _reduce_144(val, _values, result)
     result = SQLParser::Statement::False.new 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class Parser
  end   # module SQLParser
